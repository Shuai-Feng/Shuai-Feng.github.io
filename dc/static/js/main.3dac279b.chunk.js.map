{"version":3,"sources":["App.js","page/login/index.js","components/Footer/index.js","util/utils.js","components/Header/index.js","config/menuConfig.js","components/NavLeft/index.js","admin.js","page/ui/button.js","page/ui/model.js","page/home/index.js","page/nomatch/index.js","page/ui/loading.js","page/ui/notic.js","page/ui/message.js","page/ui/tags.js","page/ui/gallery.js","page/ui/carousel.js","page/form/login.js","page/form/register.js","axios/index.js","page/table/basictable.js","util/myMock.js","page/table/higertable.js","page/city/index.js","components/BaseForm/index.js","components/ETable/index.js","page/order/index.js","page/user/index.js","page/map/bikemap.js","common.js","page/order/detail.js","page/echarts/bar/index.js","page/echarts/pie/index.js","page/echarts/line/index.js","page/rich/index.js","page/permision/menuConfig.js","page/permision/index.js","router.js","serviceWorker.js","index.js"],"names":["App","this","props","children","Component","Login","Footer","className","Option","formDate","time","data","Date","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","pagenation","callback","onChange","current","result","page","pageSize","page_size","total_count","showTotal","showQuickJumper","getOptionList","options","map","item","push","value","id","key","name","updateSelectedItem","selectedRowKeys","selectedItem","selectedIds","setState","Header","state","userName","sysTime","Util","getTime","setInterval","getWeatherApIData","menuType","span","src","alt","href","dayPictureUrl","weather","menuList","title","btnList","SubMenu","NavLeft","renderMenu","Item","to","menuTree","theme","Admin","Buttons","loading","size","handleCloseLoading","bind","handleChange","e","target","type","icon","shape","onClick","Group","Model","handleOpen","console","log","titile","content","onOk","onCancel","showModel1","showModel2","showModel3","showModel4","visible","okText","cancelText","style","top","wrapClassName","Home","Nomatch","Loading","indicator","message","description","tip","Notic","direction","notification","config","placement","openNotification","Message","showMessage","TabPane","newTabIndex","handleCallback","info","activeKey","onEdit","targetKey","action","add","panes","remove","lastIndex","forEach","pane","i","filter","length","defaultActiveKey","tab","disabled","panel","React","Gallery","openGallery","imgSrc","currentImg","imgList","list","marginBottom","cover","Meta","gutter","index","md","width","height","footer","Carousels","effect","FormItem","FormLogin","handleSubmit","useInfo","form","getFieldsValue","validateFields","err","values","success","User_name","User_password","getFieldDecorator","layout","placeholder","marginTop","rules","required","min","max","pattern","prefix","valuePropName","initialValue","float","create","RadioGroup","TextArea","FormRegister","imageUrl","JSON","stringify","getBase64","img","reader","FileReader","addEventListener","readAsDataURL","file","status","originFileObj","formItemLayout","labelCol","xs","sm","wrapperCol","offsetLayout","offset","label","mode","moment","showTime","format","autoSize","minRows","maxRow","listType","showUploadList","Axios","Promise","resolve","reject","JsonP","url","param","response","messsage","baseURL","isShowLoading","document","getElementById","display","isMock","axios","method","timeout","params","then","res","code","msg","catch","error","_this","ajax","item_list","BasicTable","dataSource","dataSource1","sex","interest","birthday","address","Hdata","Utils","record","selectKey","selectItem","rows","selectedRows","ids","confirm","join","columns","dataIndex","rowSelection","rowCheckSelection","bordered","onRow","onRowClick","handleDelete","pagination","Mock","mock","HighTable","get","request","columns3","sorter","a","b","sortDirections","render","text","scroll","x","y","City","isShowOpenCity","handleOpenCity","cityinfo","cityForm","requestList","arr","user_name","wrappedComponentRef","inst","FilterForm","margin","OpenCityForm","FormItemLayout","BaseForm","formList","handleFilterSubmit","fieldsValue","filterSubmit","initFormList","formItemList","field","palceholder","CITY","begin_time","end_time","colon","INPUT","SELECT","CHECKBOX","DATEPICKER","reset","ETable","indexOf","splice","tableInit","row_selection","onSelectedChange","Order","orderInfo","orderConfirmVisble","handleFilter","handleConfirm","orderId","handleFinishOrder","openOrderDetail","window","open","marginLeft","distance","bike_sn","battery","start_time","location","User","isVisible","hadleOperate","userInfo","UserForm","resetFields","getState","formlayout","username","Map","totalCount","renderMap","route_list","BMap","gps1","split","startPoint","Point","gps2","endPoint","centerAndZoom","startPointIcon","Icon","Size","imageSize","anchor","bikeMarketStart","Marker","addOverlay","endPointIcon","bikeMarketEnd","routeList","p","polyLine","Polyline","strokeColor","strokeWeight","strokeOpacity","servicePointList","service_list","lon","lat","polyServiceLine","Polygon","fillColor","bikeList","bike_list","bikeIcon","point","bikeMarker","handelFilterSubmit","filterParam","Common","addMapControl","drawBikearea","area","drawBikeRoute","position_list","addControl","ScaleControl","BMAP_ANCHOR_TOP_LEFT","NavigationControl","positionList","first","startIcon","startMarker","last","endIcon","endMarker","trackPoint","polyline","polygon","match","getDetailInfo","mobile","start_location","end_location","Bar","getOption","tooltip","trigger","xAxis","yAxis","series","getOption2","legend","option","formatter","right","orient","roseType","sort","animationType","animationEasing","animationDelay","idx","Math","random","getOption3","boundaryGap","areaStyle","Rich","editState","EditorState","createEmpty","showRichText","editorContent","editorState","handleClearContent","handleGetText","cotentState","onEditorStateChange","onEditorChange","marginRight","onContentStateChange","draftjs","TreeNode","Permison","isRoleVisible","isPermVisible","handleRole","handleRoleSubmit","roleForm","includes","handleRolePermission","detailInfo","menuInfo","menus","handlePermEditSubmit","permForm","role_id","handleUserAuth","isUserVisible","getRoleUserList","getAuthUserList","mockData","targetKeys","user_id","handleUserSubmit","user_ids","patchMenuInfo","checkedKeys","userAuthForm","patchUserInfo","RoleForm","PerEditForm","onCheck","renderTreeNodes","formItemlayout","detail_info","role_name","checkable","defaultExpandAll","menuConfig","RoleAuthForm","filterOption","inputValue","listStyle","titles","showSearch","IRouter","path","component","OrderDetail","Notice","Tags","BikeMap","EBar","EPie","ELine","Permision","Boolean","hostname","ReactDOM","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3dac279b.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        {this.props.children}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","import React, { Component } from 'react';\r\n\r\nclass Login extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                 this is login\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Login;","import React, { Component } from 'react';\r\nimport './index.less';\r\nclass Footer extends Component {\r\n    render() {\r\n        return (\r\n            <div className='footer'>\r\n                版权所有 布里特安防公司&copy;  (推荐使用chrome 浏览器达到极致体验 ) \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\nimport {Select} from 'antd';\r\nconst Option = Select.Option\r\nexport default {\r\n    formDate(time){\r\n        if(!time) return '';\r\n        let data = new Date(time);\r\n        let _year = data.getFullYear()+\"-\";\r\n        let _month = (data.getMonth()+1)+\"-\";\r\n        let _date = data.getDate()+' ';\r\n        let _hour = data.getHours()<10?'0'+data.getHours():data.getHours();\r\n        let _minute = data.getMinutes()<10?'0'+data.getMinutes():data.getMinutes();\r\n        let _second = data.getSeconds()<10?'0'+data.getSeconds():data.getSeconds();\r\n        return _year+_month+_date+_hour+':'+_minute+':'+_second+' ';\r\n    },\r\n    pagenation(data,callback){\r\n        let page = {\r\n            onChange:(current)=>{\r\n                callback(current)\r\n            },\r\n            current:data.result.page,\r\n            pageSize:data.result.page_size,\r\n            total_count:data.result.total_count,\r\n            showTotal:()=>{\r\n                return `共${data.result.total_count}条`\r\n            },\r\n            showQuickJumper:true\r\n        }\r\n        return page;\r\n    },\r\n    getOptionList(data){\r\n        if(!data){\r\n            return [];\r\n        }\r\n        let options = [] //[<Option value=\"0\" key=\"all_key\">全部</Option>];\r\n        data.map((item)=>{\r\n            options.push(<Option value={item.id} key={item.id}>{item.name}</Option>)\r\n            return true;\r\n        })\r\n        return options;\r\n    },\r\n    updateSelectedItem(selectedRowKeys,selectedItem,selectedIds){\r\n        if(selectedIds){\r\n            this.setState({\r\n                selectedRowKeys,\r\n                selectedItem,\r\n                selectedIds\r\n            })\r\n        }else{\r\n            this.setState({\r\n                selectedRowKeys,\r\n                selectedItem\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\n","import React, { Component } from 'react';\r\nimport { Row,Col } from 'antd';\r\nimport Util from '../../util/utils';\r\n// import Axiso from '../../axios';\r\n// import axios from 'axios';\r\nimport './index.less'\r\nclass Header extends Component {\r\n    state={\r\n        userName:'gale',\r\n        sysTime:Util.formDate(new Date().getTime())\r\n    }\r\n    componentWillMount(){\r\n        setInterval(() => {\r\n            let sysTime = Util.formDate(new Date().getTime());\r\n            this.setState({\r\n                sysTime\r\n            })\r\n        }, 1000);\r\n        this.getWeatherApIData();\r\n    }\r\n    getWeatherApIData(){\r\n        // let city = '北京';\r\n        // axios.jsonp({\r\n        //     url:'http://api.map.baidu.com/telematics/v3/weather?location='+encodeURIComponent(city)+'&output=json&ak=3p49MVra6urFRGOT9s8UBWr2'\r\n        // }).then((res)=>{\r\n        //     if(res.status == 'success'){\r\n        //         let data = res.results[0].weather_data[0];\r\n        //         this.setState({\r\n        //             dayPictureUrl:data.dayPictureUrl,\r\n        //             weather:data.weather\r\n        //         })\r\n        //     }\r\n        // })\r\n    }\r\n    render() {\r\n        const menuType = this.props.menuType;\r\n        let { sysTime,userName } = this.state;\r\n        return (\r\n            <div className='header'>\r\n                <Row className='header-top'>\r\n                    {\r\n                        menuType?\r\n                            <Col span={3} className=\"logo\">\r\n                                <img src=\"/asset/logo-ant.svg\"  alt=\"\"></img>\r\n                                <span>详情界面</span>\r\n                            </Col>:\"\"\r\n                    }\r\n                    <Col span={menuType?18:24}>\r\n                        <span>欢迎,{userName}</span>\r\n                        <a href=\"/#/admin\">退出</a>\r\n                    </Col>\r\n                </Row>  \r\n                {\r\n                    menuType?\"\":\r\n                    <Row className=\"breadcrumb\">\r\n                    <Col span={4} className='breadcrumb-title'>\r\n                        首页\r\n                    </Col>\r\n                    <Col span={20} className='weather'> \r\n                        <span className='date'> {sysTime}</span>\r\n                        <span className='weather-img'>\r\n                            <img alt=\"weatherpic\" src={this.state.dayPictureUrl} ></img>\r\n                        </span>\r\n                        <span className='weather-detail '>\r\n                            {this.state.weather }\r\n                        </span>\r\n                    </Col>\r\n                </Row>\r\n                }\r\n                \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;","const menuList = [\r\n    {\r\n        title: '首页',\r\n        key: '/home'\r\n    },\r\n    {\r\n        title: 'UI',\r\n        key: '/ui',\r\n        children: [\r\n            {\r\n                title: '按钮',\r\n                key: '/ui/buttons',\r\n            },\r\n            {\r\n                title: '弹框',\r\n                key: '/ui/modals',\r\n            },\r\n            {\r\n                title: 'Loading',\r\n                key: '/ui/loadings',\r\n            },\r\n            {\r\n                title: '通知提醒',\r\n                key: '/ui/notification',\r\n            },\r\n            {\r\n                title: '全局Message',\r\n                key: '/ui/messages',\r\n            },\r\n            {\r\n                title: 'Tab页签',\r\n                key: '/ui/tabs',\r\n            },\r\n            {\r\n                title: '图片画廊',\r\n                key: '/ui/gallery',\r\n            },\r\n            {\r\n                title: '轮播图',\r\n                key: '/ui/carousel',\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        title: '表单',\r\n        key: '/form',\r\n        children: [\r\n            {\r\n                title: '登录',\r\n                key: '/form/login',\r\n            },\r\n            {\r\n                title: '注册',\r\n                key: '/form/reg',\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        title: '表格',\r\n        key: '/table',\r\n        children: [\r\n            {\r\n                title: '基础表格',\r\n                key: '/table/basic',\r\n            },\r\n            {\r\n                title: '高级表格',\r\n                key: '/table/high',\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        title: '富文本',\r\n        key: '/rich'\r\n    },\r\n    {\r\n        title: '城市管理',\r\n        key: '/city'\r\n    },\r\n    {\r\n        title: '订单管理',\r\n        key: '/order',\r\n        btnList: [\r\n            {\r\n                title: '订单详情',\r\n                key: 'detail'\r\n            },\r\n            {\r\n                title: '结束订单',\r\n                key: 'finish'\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        title: '员工管理',\r\n        key: '/user'\r\n    },\r\n    {\r\n        title: '车辆地图',\r\n        key: '/bikeMap'\r\n    },\r\n    {\r\n        title: '图标',\r\n        key: '/charts',\r\n        children: [\r\n            {\r\n                title: '柱形图',\r\n                key: '/charts/bar'\r\n            },\r\n            {\r\n                title: '饼图',\r\n                key: '/charts/pie'\r\n            },\r\n            {\r\n                title: '折线图',\r\n                key: '/charts/line'\r\n            },\r\n        ]\r\n    },\r\n    {\r\n        title: '权限设置',\r\n        key: '/permission'\r\n    },\r\n];\r\nexport default menuList;","import React, { Component } from 'react';\r\nimport { Menu} from 'antd';\r\nimport { NavLink } from 'react-router-dom';\r\n// import { EnvironmentOutlined } from '@ant-design/icons';\r\nimport menuList from './../../config/menuConfig';\r\nconst { SubMenu } = Menu;\r\n\r\nclass NavLeft extends Component {\r\n    render() {\r\n        let { menuTree } = this.state;\r\n        return (\r\n            <div>\r\n                <div className='logo'>\r\n                    <img src='/asset/logo-ant.svg' alt='图片的logo'></img>\r\n                    <h1>布里特安防</h1>\r\n                </div>\r\n                <Menu theme='dark'>\r\n                    {menuTree}\r\n                </Menu>\r\n            </div>\r\n        );\r\n    }\r\n    renderMenu=(data)=>{\r\n        return data.map((item)=>{\r\n            if(item.children){\r\n                return (\r\n                    <SubMenu title={item.title} key={item.key}> \r\n                        { this.renderMenu(item.children) }\r\n                    </SubMenu>\r\n                )\r\n            }\r\n            return <Menu.Item title={item.title} key={item.key}>\r\n                        <NavLink to={item.key}> {item.title}</NavLink>    \r\n            </Menu.Item>\r\n        })\r\n    }\r\n    componentWillMount(){\r\n        const menuTree = this.renderMenu(menuList);\r\n        this.setState({\r\n            menuTree\r\n        })\r\n    }\r\n}\r\n\r\nexport default NavLeft;","import React, { Component } from 'react';\r\nimport { Row,Col } from 'antd';\r\n\r\nimport Footer from './components/Footer';\r\nimport Header from './components/Header';\r\nimport NavLeft from './components/NavLeft';\r\n\r\nimport './style/common.less'\r\n\r\nclass Admin extends Component {\r\n    \r\n    render() {\r\n        return (\r\n            <Row className='container'>\r\n            \r\n                <Col span={3} className='nav-left'>\r\n                    <NavLeft/>\r\n                </Col>\r\n                <Col span={21} className='main'>\r\n                    <Header></Header>\r\n                    <Row className='content'>\r\n                        {this.props.children}\r\n                    </Row>\r\n                    <Footer></Footer>\r\n                </Col>\r\n            </Row>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Admin;","import {Button,Card,Radio} from 'antd';\r\nimport './ui.less';\r\nimport React, { Component } from 'react';\r\n\r\nclass Buttons extends Component {\r\n    constructor(){\r\n        super()\r\n        this.state = {\r\n            loading:false,\r\n            size:'small'\r\n        }\r\n        this.handleCloseLoading = this.handleCloseLoading.bind(this)\r\n        this.handleChange = this.handleChange.bind(this)\r\n    }\r\n    handleCloseLoading(){\r\n        let { loading } = this.state;\r\n        this.setState({\r\n            loading:!loading\r\n        })\r\n    }\r\n    handleChange(e){\r\n        this.setState({\r\n            size:e.target.value\r\n        })\r\n    }\r\n    render() {\r\n        let {loading} = this.state;\r\n        return (\r\n        <div>\r\n            <Card title=\"基础按钮\" className=\"card-warp\">\r\n                <Button type=\"primary\">布里特安防公司</Button>\r\n                <Button type=\"danger\">布里特安防公司</Button>\r\n                <Button type=\"dashed\">布里特安防公司</Button>\r\n                <Button loading>布里特安防公司</Button>\r\n            </Card>\r\n            <Card title=\"图形按钮\" className=\"card-warp\">\r\n                <Button icon=\"plus\">创建</Button>\r\n                <Button icon=\"edit\">编辑</Button>\r\n                <Button icon=\"delete\">删除</Button>\r\n                <Button shape=\"circle\" icon=\"search\"></Button>\r\n                <Button type=\"primary\" icon=\"search\">搜索</Button>\r\n                <Button type=\"primary\" icon=\"download\"></Button>\r\n            </Card>\r\n            <Card title=\"Loading\" className=\"card-warp\">\r\n                <Button icon=\"plus\" loading={loading}>创建</Button>\r\n                <Button icon=\"edit\" loading={loading}>编辑</Button>\r\n                <Button icon=\"delete\" loading={loading}>删除</Button>\r\n                <Button shape=\"circle\" icon=\"search\" loading={loading}></Button>\r\n                <Button type=\"primary\" icon=\"search\" loading={loading}>搜索</Button>\r\n                <Button type=\"primary\"  onClick={this.handleCloseLoading}>换</Button>\r\n            </Card>\r\n            <Card title=\"按钮组\" className=\"card-warp\">\r\n                <Button.Group>\r\n                     <Button icon=\"left\">返回</Button>\r\n                     <Button icon=\"right\">前进</Button>\r\n                </Button.Group>\r\n            </Card>\r\n            <Card title=\"按钮尺寸\" className=\"card-warp\">\r\n                <Radio.Group value={this.state.size} onChange={this.handleChange}>\r\n                    <Radio value=\"small\">小</Radio>\r\n                    <Radio value=\"default\">中</Radio>\r\n                    <Radio value=\"large\">大</Radio>\r\n                </Radio.Group>\r\n                <Button type=\"primary\" size={this.state.size}>Imoc</Button>\r\n                <Button type=\"dashed\" size={this.state.size}>Imoc</Button>\r\n                <Button type=\"danger\" size={this.state.size}>Imoc</Button>\r\n            </Card>\r\n        </div> \r\n        );\r\n    }\r\n}\r\n\r\nexport default Buttons;\r\n","import React, { Component } from 'react';\r\nimport './ui.less'\r\nimport { Card,Button,Modal } from 'antd';\r\nclass Model extends Component {\r\n    constructor(){\r\n        super()\r\n        this.state={\r\n            showModel1:false,\r\n            showModel2:false,\r\n            showModel3:false,\r\n            showModel4:false\r\n        }\r\n    }\r\n    handleOpen = (type)=>{\r\n        console.log(type)\r\n            this.setState({\r\n                [type]:true  \r\n            })\r\n    }\r\n    handleOpen = (type)=>{\r\n        Modal[type]({\r\n            titile:\"确认\",\r\n            content:\"吃个人如何\",\r\n            onOk(){\r\n                console.log('ok')\r\n            },\r\n            onCancel(){\r\n                console.log('cancle')\r\n            }\r\n        })\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Card title=\"基础模态框\" className=\"card-warp\">\r\n                    <Button type=\"primary\" onClick={()=>this.handleOpen('showModel1')}>Open</Button>\r\n                    <Button onClick={()=>this.handleOpen('showModel2')}>自定义页脚</Button>\r\n                    <Button onClick={()=>this.handleOpen('showModel3')}>顶部20px单矿</Button>\r\n                    <Button onClick={()=>this.handleOpen('showModel4')}>水平垂直居中</Button>\r\n                </Card>\r\n                <Card title=\"信息确认框\" className=\"card-warp\">\r\n                    <Button type=\"primary\" onClick={()=>this.handleOpen('confirm')}>信息确认框 吃个人？</Button>\r\n                    <Button onClick={()=>this.handleOpen('info')}>自定义页脚</Button>\r\n                    <Button onClick={()=>this.handleOpen('success')}>好吃</Button>\r\n                    <Button onClick={()=>this.handleOpen('warning')}> </Button>\r\n                </Card>\r\n                <Modal \r\n                    title=\"React\"\r\n                    visible={this.state.showModel1}\r\n                    onCancel={()=>{\r\n                        this.setState({\r\n                            showModel1:false\r\n                        })\r\n                    }}\r\n                >\r\n                    <span>成了啊</span>\r\n                </Modal>\r\n                <Modal \r\n                    title=\"React\"\r\n                    visible={this.state.showModel2}\r\n                    okText=\"完活\"\r\n                    cancelText=\"👴觉得不行\"\r\n                    onCancel={()=>{\r\n                        this.setState({\r\n                            showModel2:false\r\n                        })\r\n                    }}\r\n                    onOk={()=>{\r\n                        this.setState({\r\n                            showModel2:false\r\n                        })\r\n                    }}\r\n                >\r\n                    <span>成了啊</span>\r\n                </Modal>\r\n                <Modal \r\n                    title=\"React\"\r\n                    visible={this.state.showModel3}\r\n                    style={{top:20}}\r\n                    okText=\"完活\"\r\n                    cancelText=\"👴觉得不行\"\r\n                    onCancel={()=>{\r\n                        this.setState({\r\n                            showModel3:false\r\n                        })\r\n                    }}\r\n                >\r\n                    <span>成了啊</span>\r\n                </Modal>\r\n                <Modal \r\n                    title=\"React\"\r\n                    visible={this.state.showModel4}\r\n                    wrapClassName=\"vertical-center-modal\"\r\n                    onCancel={()=>{\r\n                        this.setState({\r\n                            showModel4:false\r\n                        })\r\n                    }}\r\n                >\r\n                    <span>成了啊</span>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Model;","import React, { Component } from 'react';\r\nimport './index.less'\r\nclass Home extends Component {\r\n    render() {\r\n        return (\r\n            <div className='home-warp'>\r\n                欢迎进入布里特安防公司管理系统  \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\n\r\nconst Nomatch = () => {\r\n    return (\r\n        <div className=\"error404\">\r\n            404 NOT FOUND\r\n            页面跑了哦\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Nomatch;","import React, { Component } from 'react';\r\nimport {Card,Spin,Icon,Alert} from 'antd';\r\nimport './ui.less'\r\nclass Loading extends Component {\r\n    render() {\r\n        const icon = <Icon type=\"loading\" ></Icon>\r\n        return (\r\n            <div>\r\n                <Card title=\"Spin用法\" className=\"card-warp\">\r\n                    <Spin></Spin>\r\n                    <Spin size=\"large\"></Spin>\r\n                    <Spin indicator={icon}></Spin>\r\n                </Card>\r\n                <Card title=\"内容遮罩\">\r\n                <Alert message=\"React\" description=\"Rip and Tears\" type=\"info\"></Alert>\r\n                    <Spin>\r\n                        <Alert message=\"React\" description=\"Rip and Tears\" type=\"info\"></Alert>\r\n                    </Spin>\r\n                    <Spin tip='少女折寿中'>\r\n                        <Alert message=\"React\" description=\"Rip and Tears\" type=\"warning\"></Alert>\r\n                    </Spin>\r\n                    <Alert message=\"React\" description=\"Rip and Tears\" type=\"success\"></Alert>\r\n                </Card>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Loading;","import React, { Component } from 'react';\r\nimport {Card,Button, notification} from 'antd';\r\nimport './ui.less'\r\nclass Notic extends Component {\r\n    openNotification(type,direction){\r\n        if(direction){\r\n            notification.config({\r\n                placement:direction\r\n            })\r\n        }\r\n        notification[type]({\r\n            message:\"发工资了\",\r\n            description:\"上个月考勤22天\"\r\n        })\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Card title=\"通知提醒框\" className=\"card-warp\">\r\n                    <Button type=\"primary\" onClick={()=>this.openNotification('success')}>Success</Button>\r\n                    <Button type=\"primary\" onClick={()=>this.openNotification('error')}>Error</Button>\r\n                    <Button type=\"primary\" onClick={()=>this.openNotification('warning')}>Warning</Button>\r\n                    <Button type=\"primary\" onClick={()=>this.openNotification('info')}>Info</Button>\r\n                </Card>\r\n                <Card title=\"通知提醒框\" className=\"card-warp\">\r\n                    <Button type=\"primary\" onClick={()=>this.openNotification('success','topLeft')}>Success</Button>\r\n                    <Button type=\"primary\" onClick={()=>this.openNotification('error','topRight')}>Error</Button>\r\n                    <Button type=\"primary\" onClick={()=>this.openNotification('warning','bottomLeft')}>Warning</Button>\r\n                    <Button type=\"primary\" onClick={()=>this.openNotification('info','bottomRight')}>Info</Button>\r\n                </Card>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Notic;","import React, { Component } from 'react';\r\nimport {Card,Button,message} from 'antd';\r\nimport './ui.less'\r\nclass Message extends Component {\r\n    showMessage = (type)=>{\r\n        message[type](\"恭喜你的react晋级成功\")\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Card title=\"全局提示框\" className=\"card-warp\">\r\n                    <Button type=\"primary\" onClick={()=>this.showMessage(\"success\")}>Success</Button>\r\n                    <Button onClick={()=>this.showMessage(\"info\")}>Info</Button>\r\n                    <Button onClick={()=>this.showMessage(\"warning\")}>Warning</Button>\r\n                    <Button onClick={()=>this.showMessage(\"error\")}>Error</Button>\r\n                    <Button onClick={()=>this.showMessage(\"loading\")}>Loading</Button>\r\n                </Card> \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Message;","import React from 'react'\r\nimport { Card, Tabs, message, Icon } from 'antd'\r\nimport './ui.less'\r\nconst TabPane = Tabs.TabPane;\r\nexport default class Buttons extends React.Component {\r\n\r\n    newTabIndex = 0;\r\n    handleCallback = (key)=>{\r\n        message.info(\"Hi,您选择了页签：\"+key)\r\n    }\r\n\r\n    componentWillMount(){\r\n        const panes = [\r\n            {\r\n                title:'Tab 1',\r\n                content: 'Tab 1',\r\n                key:'1'\r\n            },\r\n            {\r\n                title: 'Tab 2',\r\n                content: 'Tab 2',\r\n                key: '2'\r\n            },\r\n            {\r\n                title: 'Tab 3',\r\n                content: 'Tab 3',\r\n                key: '3'\r\n            }\r\n        ]\r\n        this.setState({\r\n            activeKey: panes[0].key,\r\n            panes\r\n        })\r\n    }\r\n\r\n    onChange = (activeKey)=>{\r\n        this.setState({\r\n            activeKey\r\n        })\r\n    }\r\n\r\n    onEdit = (targetKey, action) => {\r\n        this[action](targetKey);\r\n    }\r\n\r\n    add = () => {\r\n        const { panes } = this.state;\r\n        const activeKey = `newTab${this.newTabIndex++}`;\r\n        panes.push({ title: 'New Tab', content: 'Content of new Tab', key: activeKey });\r\n        this.setState({ panes, activeKey });\r\n      };\r\n    \r\n      remove = targetKey => {\r\n        let { activeKey } = this.state;\r\n        let lastIndex;\r\n        this.state.panes.forEach((pane, i) => {\r\n          if (pane.key === targetKey) {\r\n            lastIndex = i - 1;\r\n          }\r\n        });\r\n        const panes = this.state.panes.filter(pane => pane.key !== targetKey);\r\n        if (panes.length && activeKey === targetKey) {\r\n          if (lastIndex >= 0) {\r\n            activeKey = panes[lastIndex].key;\r\n          } else {\r\n            activeKey = panes[0].key;\r\n          }\r\n        }\r\n        this.setState({ panes, activeKey });\r\n      };\r\n\r\n    render(){\r\n        return (\r\n            <div>\r\n                <Card title=\"Tab页签\" className=\"card-wrap\">\r\n                    <Tabs defaultActiveKey=\"1\" onChange={this.handleCallback}>\r\n                        <TabPane tab=\"Tab 1\" key=\"1\">欢迎学习React课程</TabPane>\r\n                        <TabPane tab=\"Tab 2\" key=\"2\" disabled>欢迎学习React课程</TabPane>\r\n                        <TabPane tab=\"Tab 3\" key=\"3\">React是一个非常受欢迎的MV*框架</TabPane>\r\n                    </Tabs>\r\n                </Card>\r\n                <Card title=\"Tab带图的页签\" className=\"card-wrap\">\r\n                    <Tabs defaultActiveKey=\"1\" onChange={this.handleCallback}>\r\n                        <TabPane tab={<span><Icon type=\"plus\" />Tab 1</span>} key=\"1\">欢迎学习React课程</TabPane>\r\n                        <TabPane tab={<span><Icon type=\"edit\" />Tab 2</span>} key=\"2\">欢迎学习React课程</TabPane>\r\n                        <TabPane tab={<span><Icon type=\"delete\" />Tab 3</span>} key=\"3\">React是一个非常受欢迎的MV*框架</TabPane>\r\n                    </Tabs>\r\n                </Card>\r\n                <Card title=\"Tab带图的页签\" className=\"card-wrap\">\r\n                    <Tabs \r\n                        onChange={this.onChange}\r\n                        activeKey={this.state.activeKey}\r\n                        type=\"editable-card\"\r\n                        onEdit={this.onEdit}\r\n                    >\r\n                        {\r\n                            this.state.panes.map((panel)=>{\r\n                                return <TabPane \r\n                                    tab={panel.title}\r\n                                    key={panel.key}\r\n\r\n                                />\r\n                            })\r\n                        }\r\n                    </Tabs>\r\n                </Card>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport {Card,Row,Col,Modal} from 'antd';\r\n\r\nexport default class Gallery extends React.Component {\r\n    state={\r\n        visible:false\r\n    }\r\n    openGallery = (imgSrc)=>{\r\n        this.setState({\r\n            visible:true,\r\n            currentImg:'/gallery/'+imgSrc\r\n        })\r\n    }\r\n    render(){\r\n        const imgs = [\r\n            ['1.png','2.png','3.png','4.png','5.png'],\r\n            ['6.png','7.png','8.png','9.png','10.png'],\r\n            ['11.png','12.png','13.png','14.png','15.png'],\r\n            ['16.png','17.png','18.png','19.png','20.png']\r\n        ]\r\n        const imgList = imgs.map((list)=>list.map(\r\n            (item) => <Card\r\n                style={{marginBottom:10}}\r\n                cover={<img src={'/gallery/'+item} alt={item} />}\r\n                onClick={()=>this.openGallery(item)}\r\n            >\r\n                <Card.Meta\r\n                    title=\"React Admin\"\r\n                    description=\"baby you will pick me up\"\r\n                />\r\n            </Card>\r\n        ))\r\n        console.log(imgList)\r\n        return (\r\n            \r\n            <div>\r\n                <Row gutter={10}>\r\n                {\r\n                    imgList.map((value,index)=>{\r\n                        return (\r\n                        \r\n                            <Col md={6}>\r\n                                {\r\n                                    value.map((value)=>{\r\n                                    return value;\r\n                                    })\r\n                                }\r\n                            </Col>\r\n                       \r\n                        )\r\n                    })\r\n                }\r\n                </Row>\r\n                <Modal\r\n                width={300}\r\n                height={500}\r\n                 visible={this.state.visible}\r\n                 title={\"图片画廊\"}\r\n                 onCancel={()=>{\r\n                     this.setState({\r\n                         visible:false\r\n                     })\r\n                 }}\r\n                 footer={null}\r\n                 >\r\n                    {<img src={this.state.currentImg} alt={this.state.currentImg} style={{width:\"100%\"}}/>}\r\n                </Modal>\r\n            </div>\r\n        )\r\n    }\r\n}","import React,{Component} from 'react';\r\nimport {Card,Carousel} from 'antd';\r\nimport './ui.less'\r\n\r\nexport default class Carousels extends Component {\r\n    render(){\r\n        return (\r\n            <div>\r\n                <Card title=\"文字轮播\" className=\"card-warp\">\r\n                    <Carousel effect=\"fade\">\r\n                        <div><h3>火</h3></div>\r\n                        <div><h3>风</h3></div>\r\n                        <div><h3>水</h3></div>\r\n                    </Carousel>\r\n                </Card>\r\n                <Card title=\"图片轮播\" className=\"slider-warp\">\r\n                    <Carousel effect=\"fade\">\r\n                        <div><img src=\"/carousel-img/carousel-1.jpg\"  alt=\"\"/></div>\r\n                        <div><img src=\"/carousel-img/carousel-2.jpg\"  alt=\"\"/></div>\r\n                        <div><img src=\"/carousel-img/carousel-3.jpg\"  alt=\"\"/></div>\r\n                    </Carousel>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\nimport { Card,Form,Input,Button,message,Icon, Checkbox} from 'antd';\r\nimport './ui.less';\r\n\r\nconst FormItem = Form.Item;\r\n class FormLogin extends React.Component{\r\n    handleSubmit = ()=>{\r\n        let useInfo = this.props.form.getFieldsValue();\r\n        console.log(useInfo)\r\n        this.props.form.validateFields((err,values)=>{\r\n            if(!err){\r\n                message.success(`${useInfo.User_name}的 密码是${useInfo.User_password}`);\r\n            }\r\n        })\r\n    }\r\n    render(){\r\n        const { getFieldDecorator } =  this.props.form;\r\n        return (\r\n            <div>\r\n                <Card title=\"用于登录的行内表单\" className=\"card-warp\">\r\n                    <Form layout=\"inline\">\r\n                        {/* <Col span={3}>\r\n                            <FormItem>\r\n                                <Input type=\"text\" name=\"user.User_username\" placeholder=\"请输入用户名\"/>\r\n                            </FormItem> \r\n                        </Col> */}\r\n                        <FormItem>\r\n                                <Input type=\"text\"  placeholder=\"请输入用户名\"/>\r\n                        </FormItem>\r\n                        <FormItem>\r\n                            <Input type=\"password\"  placeholder=\"请输入用户名\"/>  \r\n                        </FormItem>\r\n                        <FormItem>\r\n                            <Button type=\"primary\">登陆</Button>\r\n                        </FormItem>\r\n                    </Form>\r\n                </Card>\r\n                <Card title=\"用于登录的行内表单\" style={{marginTop:10}}>\r\n                    <Form layout=\"horizontal\" style={{width:300}}>\r\n                        {/* <Col span={3}>\r\n                            <FormItem>\r\n                                <Input type=\"text\" name=\"user.User_username\" placeholder=\"请输入用户名\"/>\r\n                            </FormItem>\r\n                        </Col> */}\r\n                        <FormItem>\r\n                                {\r\n                                    getFieldDecorator('User_name',{\r\n                                        rules:[\r\n                                            {\r\n                                                required:true,\r\n                                                message:'用户名不能为空'\r\n                                            },{\r\n                                              min:5,\r\n                                              max:10,\r\n                                              message:\"长度不在范围内\"  \r\n                                            },{\r\n                                                pattern:/^\\w+$/g,\r\n                                                message:\"用户名必须为英文字母\"\r\n                                            }\r\n                                        ]\r\n                                    })(\r\n                                        <Input type=\"text\" prefix={<Icon type=\"user\"/>}  placeholder=\"请输入用户名\"/>\r\n                                    )\r\n                                }\r\n                        </FormItem>\r\n                        <FormItem>\r\n                                {\r\n                                    getFieldDecorator('User_password',{\r\n                                        rules:[\r\n                                            {\r\n                                                required:true,\r\n                                                message:'密码不为空'\r\n                                            }\r\n                                        ]\r\n                                    })(\r\n                                        <Input prefix={<Icon type=\"lock\"/>} type=\"password\"  placeholder=\"请输入用户名\"/>\r\n                                    )\r\n                                }\r\n                            \r\n                        </FormItem>\r\n                        <FormItem>\r\n                            {\r\n                                getFieldDecorator('remember',{\r\n                                    valuePropName:\"checked\",\r\n                                    initialValue:true\r\n                                })(\r\n                                    <Checkbox >记住密码</Checkbox>\r\n                                )\r\n                            }\r\n                            <a href=\"https://baidu.com\" style={{float:\"right\"}}>忘记密码</a>\r\n                        </FormItem>\r\n                        <FormItem> \r\n                            <Button type=\"primary\" onClick={this.handleSubmit}>登陆</Button>\r\n                        </FormItem>\r\n                    </Form>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Form.create()(FormLogin);","import React from 'react';\r\nimport {Card,Form,Button,Icon,Input,Checkbox,Radio,Select,Switch,InputNumber,DatePicker,Upload,message} from 'antd';\r\nimport moment from 'moment';\r\nconst FormItem = Form.Item;\r\nconst RadioGroup = Radio.Group;\r\nconst TextArea = Input.TextArea ;   \r\nclass FormRegister extends React.Component {\r\n    state={\r\n        imageUrl:null\r\n    }\r\n    handleSubmit = ()=>{\r\n        let useInfo = this.props.form.getFieldsValue();\r\n        console.log(useInfo)\r\n        this.props.form.validateFields((err,values)=>{\r\n            if(!err){\r\n                console.log(JSON.stringify(useInfo));\r\n                message.success(`${useInfo.User_name}的 密码是${useInfo.User_password}`);\r\n            }\r\n        })\r\n    }\r\n    getBase64 = (img, callback) =>{\r\n        const reader = new FileReader();\r\n        reader.addEventListener('load', () => callback(reader.result));\r\n        reader.readAsDataURL(img);\r\n    }\r\n\r\n    handleChange = info => {\r\n        console.log(info.file);\r\n        if (info.file.status === 'uploading') {\r\n          this.setState({ loading: true });\r\n          return;\r\n        }\r\n        if (info.file.status === 'done') {\r\n          // Get this url from response in real world.\r\n          this.getBase64(info.file.originFileObj, imageUrl =>{\r\n            this.setState({\r\n              imageUrl,\r\n              loading: false,\r\n            })},\r\n          );\r\n        }\r\n      }\r\n    render(){\r\n        const Option = Select.Option\r\n        const { getFieldDecorator } =  this.props.form;\r\n        let useInfo = this.props.form.getFieldsValue();\r\n        console.log(useInfo);\r\n        // Boss,may be you can use this methods to manage layouts in other project\r\n        const formItemLayout = {\r\n            labelCol:{\r\n                xs:24,\r\n                sm:4\r\n            },\r\n            wrapperCol:{\r\n                xs:24,\r\n                sm:20\r\n            }\r\n        }\r\n        const offsetLayout = {\r\n            wrapperCol:{\r\n                xs:24,\r\n                sm:{\r\n                    span:12,\r\n                    offset:4\r\n                }\r\n            }\r\n        }\r\n        // const uploadprops = {\r\n        //     name: 'file',\r\n        //     action: 'https://www.mocky.io/v2/5cc8019d300000980a055e76',\r\n        //     headers: {\r\n        //       authorization: 'authorization-text',\r\n        //     },\r\n        //     onChange(info) {\r\n        //       if (info.file.status !== 'uploading') {\r\n        //         console.log(info.file, info.fileList);\r\n        //       }\r\n        //       if (info.file.status === 'done') {\r\n        //         message.success(`${info.file.name} file uploaded successfully`);\r\n        //       } else if (info.file.status === 'error') {\r\n        //         message.error(`${info.file.name} file upload failed.`);\r\n        //       }\r\n        //     },\r\n        // }\r\n\r\n        return (\r\n            <div>\r\n                <Card title=\"注册表单\">\r\n                    <Form layout=\"horizontal\">\r\n                        <FormItem label=\"用户名\" {...formItemLayout}>\r\n                        {\r\n                            getFieldDecorator('User_name',{\r\n                                rules:[\r\n                                    {\r\n                                        required:true,\r\n                                        message:'用户名不为空'\r\n                                    }\r\n                                ]\r\n                            })(\r\n                                <Input prefix={<Icon type=\"user\"/>} type=\"text\"  placeholder=\"请输入用户名\"/>\r\n                            )\r\n                        }\r\n                        </FormItem>\r\n                        <FormItem label=\"密码\" {...formItemLayout}>\r\n                        {\r\n                            getFieldDecorator('User_password',{\r\n                                rules:[\r\n                                    {\r\n                                        required:true,\r\n                                        message:'密码不为空'\r\n                                    }\r\n                                ]\r\n                            })(\r\n                                <Input prefix={<Icon type=\"lock\"/>} type=\"text\"  placeholder=\"请输入密码\"/>\r\n                            )\r\n                        }\r\n                        </FormItem>\r\n                        <FormItem label=\"性别\" {...formItemLayout}>\r\n                        {\r\n                            getFieldDecorator('sex',{\r\n                                initialValue:\"1\",\r\n                                rules:[\r\n                                    {\r\n                                        required:true,\r\n                                        message:'必须选择性别'\r\n                                    }\r\n                                ]\r\n                            })(\r\n                              <RadioGroup>\r\n                                <Radio value=\"1\">男</Radio>\r\n                                <Radio value=\"2\">女</Radio>\r\n                              </RadioGroup>\r\n                            )\r\n                        }\r\n                        </FormItem>\r\n                        <FormItem label=\"年龄\" {...formItemLayout}>\r\n                        {\r\n                            getFieldDecorator('age',{\r\n                                initialValue:18,\r\n                                rules:[\r\n                                    {\r\n                                        required:true,\r\n                                        message:'年龄不能为空'\r\n                                    }\r\n                                ]\r\n                            })(\r\n                              <InputNumber></InputNumber>\r\n                            )\r\n                        }\r\n                        </FormItem>\r\n                        <FormItem label=\"当前状态\" {...formItemLayout}>\r\n                        {\r\n                            getFieldDecorator('state',{\r\n                                initialValue:\"LV1\",\r\n                                rules:[\r\n                                    {\r\n                                        required:true,\r\n                                        message:'年龄不能为空'\r\n                                    }\r\n                                ]\r\n                            })(\r\n                                <Select>\r\n                                    <Option  key=\"LV1\">LV1</Option>\r\n                                    <Option  key=\"LV2\">LV2</Option>\r\n                                    <Option  key=\"LV3\">LV3</Option>\r\n                                    <Option  key=\"LV4\">LV4</Option>\r\n                                </Select>\r\n                            )\r\n                        }\r\n                        </FormItem>\r\n                        <FormItem label=\"爱好\" {...formItemLayout}>\r\n                        {\r\n                            getFieldDecorator('hoby',{\r\n                                initialValue:[\"打篮球\",\"看书\"],\r\n                                rules:[\r\n                                    {\r\n                                        required:true,\r\n                                        message:'年龄不能为空'\r\n                                    }\r\n                                ]\r\n                            })(\r\n                                <Select mode=\"multiple\">\r\n                                    <Option  key=\"打篮球\">打篮球</Option>\r\n                                    <Option  key=\"看书\">看书</Option>\r\n                                    <Option  key=\"RS级电影\">RS级电影</Option>\r\n                                    <Option  key=\"看恐怖片\">看恐怖片</Option>\r\n                                    <Option  key=\"吃人\">吃人</Option>\r\n                                    <Option  key=\"搞黄色\">搞黄色</Option>\r\n                                </Select>\r\n                            )\r\n                        }\r\n                        </FormItem>\r\n                        <FormItem label=\"婚否\" {...formItemLayout}>\r\n                        {\r\n                            getFieldDecorator('marrage',{\r\n                                valuePropName:\"checked\",\r\n                                initialValue:true,   \r\n                                rules:[\r\n                                    {\r\n                                        required:true,\r\n                                    }\r\n                                ]\r\n                            })(\r\n                                <Switch></Switch>\r\n                            )\r\n                        }\r\n                        </FormItem>\r\n                        <FormItem label=\"生日\" {...formItemLayout}>\r\n                            {\r\n                                getFieldDecorator('birthday',{\r\n                                    initialValue:moment('2018-08-08 11:11:11')\r\n                                })(<DatePicker\r\n                                    showTime\r\n                                    format=\"YYYY-MM-DD hh:mm:ss\"\r\n                                />)\r\n                            }\r\n                        </FormItem>\r\n                        <FormItem label=\"练习地址\" {...formItemLayout}>\r\n                            {\r\n                                getFieldDecorator('addredss',{\r\n                                    rules:[\r\n                                        {\r\n                                            required:true,\r\n                                            message:'联系地址'\r\n                                        }\r\n                                    ]\r\n                                })(\r\n                                    <TextArea\r\n                                        autoSize={{minRows:4,maxRow:6}}\r\n                                    />\r\n                                )\r\n                            }\r\n                        </FormItem> \r\n                        <FormItem label=\"头像\" {...formItemLayout}>\r\n                            {\r\n                                getFieldDecorator('useImg')(\r\n                                    <Upload \r\n                                            listType=\"picture-card\"\r\n                                            showUploadList={false}\r\n                                            action=\"https://www.mocky.io/v2/5cc8019d300000980a055e76\"\r\n                                            onChange={this.handleChange}\r\n\r\n                                    >\r\n                                        {this.state.imageUrl?<img src={this.state.imageUrl} alt=\"\"/>:<Icon type=\"plus\"/>}\r\n                                    </Upload>\r\n                                )\r\n                            }\r\n                        </FormItem>\r\n                        <FormItem   {...offsetLayout}>\r\n                            {\r\n                                getFieldDecorator('agree')(\r\n                                    <Checkbox>我已经阅读过<a href=\"https://baidu.com\">布里特安防公司协议 </a></Checkbox>\r\n                                )\r\n                            }\r\n                        </FormItem> \r\n                        <FormItem   {...offsetLayout}>\r\n                            <Button type=\"primary\" onClick={this.handleSubmit}>注册</Button>\r\n                        </FormItem>\r\n                    </Form>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Form.create()(FormRegister);\r\n","import JsonP from 'jsonp';\r\nimport axios from 'axios';\r\nimport { Modal,message } from 'antd';\r\nexport default class Axios {\r\n    static jsonp(options) {\r\n        return new Promise((resolve, reject) => {\r\n            JsonP(options.url, {\r\n                param: 'callback'\r\n            }, function (err, response) {\r\n                if (response.status === 'success') {\r\n                    resolve(response);\r\n                } else {\r\n                    reject(response.messsage);\r\n                }\r\n            })\r\n        })\r\n    }\r\n    static ajax(options){\r\n        let loading;\r\n        if(options.data && options.data.isShowLoading !==false){\r\n            loading = document.getElementById('ajaxLoading');\r\n            loading.style.display = 'block';\r\n        }\r\n        let baseURL ;\r\n        if(options.isMock){\r\n            baseURL = \"https://www.fastmock.site/mock/cc1a61c8ea14b1c8ae0775b75ca1d29e/cheche\";\r\n        }else{\r\n            baseURL = \"https://www.fastmock.site/mock/cc1a61c8ea14b1c8ae0775b75ca1d29e/cheche\";\r\n        }\r\n        return new Promise((resolve,reject)=>{\r\n            axios({\r\n                url:options.url,\r\n                method:\"get\",\r\n                baseURL:baseURL,\r\n                timeout:5000,\r\n                params:(options.data && options.data.params)||''\r\n            }).then(response=>{\r\n                if(response.status === 200){\r\n                    let res = response.data;\r\n                    if(res.code === \"0\" || res.code === 0){\r\n                        resolve(res)\r\n                    }else{\r\n                        Modal.info({\r\n                            title:\"提示\",\r\n                            content:res.msg\r\n                        })\r\n                    }\r\n                }else{\r\n                    reject(response.data);\r\n                }\r\n                loading.style.display = 'none';\r\n            }).catch(err=>{\r\n                message.error(err.message);\r\n                loading.style.display = 'none';\r\n            })\r\n        })\r\n    }\r\n    static requestList(_this,url,params,isMock){\r\n        var data = {\r\n            params,\r\n            isMock\r\n        }\r\n        this.ajax({\r\n            url,\r\n            data\r\n        }).then((data)=>{\r\n            if(data && data.result){\r\n                let list = data.result.item_list.map((item, index) => {\r\n                    item.key = index;\r\n                    return item;\r\n                });\r\n                _this.setState({\r\n                    list\r\n                })\r\n            }\r\n        })\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport {Card,Table, Modal, Button, message} from 'antd';\r\nimport axios from './../../axios';\r\nimport Utils from '../../util/utils';\r\n\r\nclass BasicTable extends Component {\r\n    state={\r\n        dataSource:null,\r\n        dataSource1:null\r\n    }\r\n    request(){\r\n       axios.ajax({\r\n           url:\"/tablelist\",\r\n           data:{\r\n               params:{\r\n                   page:1,\r\n                   isShowLoading:true\r\n               }\r\n           }\r\n       }).then(res=>{\r\n           if(res.code === 0){\r\n               this.setState({\r\n                   dataSource1:res.result\r\n               })\r\n           }\r\n       })\r\n    }\r\n    componentDidMount(){\r\n        let _this = this;\r\n        let dataSource = [\r\n            {\r\n                id:'0',\r\n                userName:'Jack',\r\n                sex:'1',\r\n                state:'1',\r\n                interest:'1',\r\n                birthday:'2000-1-1',\r\n                address:'背景',\r\n                time:'20：00'\r\n            },\r\n            {\r\n                id:'0',\r\n                userName:'Jack',\r\n                sex:'1',\r\n                state:'1',\r\n                interest:'1',\r\n                birthday:'2000-1-1',\r\n                address:'背景',\r\n                time:'20：00'\r\n            },\r\n            {\r\n                id:'0',\r\n                userName:'Jack',\r\n                sex:'1',\r\n                state:'1',\r\n                interest:'1',\r\n                birthday:'2000-1-1',\r\n                address:'背景',\r\n                time:'20：00'\r\n            },\r\n            {\r\n                id:'0',\r\n                userName:'Jack',\r\n                sex:'1',\r\n                state:'1',\r\n                interest:'1',\r\n                birthday:'2000-1-1',\r\n                address:'背景',\r\n                time:'20：00'\r\n            },\r\n            {\r\n                id:'0',\r\n                userName:'Jack',\r\n                sex:'1',\r\n                state:'1',\r\n                interest:'1',\r\n                birthday:'2000-1-1',\r\n                address:'背景',\r\n                time:'20：00'\r\n            }\r\n        ];\r\n        let Hdata = {\r\n            result:{\r\n                dataSource,\r\n                \"page\":5,\r\n                \"page_size\":100,\r\n                \"total\":1000\r\n            }\r\n        }\r\n        dataSource.map((item,index)=>{\r\n            item.key=index;\r\n            return item;\r\n        })\r\n        this.setState({\r\n            dataSource,\r\n            pagenation:Utils.pagenation(Hdata,(current)=>{\r\n                _this.params.page = current;\r\n            })\r\n        })\r\n        // this.request();\r\n    }\r\n    onRowClick(record,index){\r\n        let selectKey=[index];\r\n        Modal.info({\r\n            title:\"信息\",\r\n            content:`用户名${record.userName} ,用户爱好${record.interest}`\r\n        })\r\n        this.setState({\r\n            selectedRowKeys:selectKey,\r\n            selectItem:record\r\n        })\r\n    }\r\n    handleDelete(){\r\n        let rows = this.state.selectedRows;\r\n        let ids = [];\r\n        rows.map((item)=>{\r\n            ids.push(item.id);\r\n            return item;\r\n        })\r\n        Modal.confirm({\r\n            title:\"删除提示\",\r\n            content:`您确定要删除这些吗？${ids.join('、')}`,\r\n            onOk:()=>{\r\n                message.success('删除成功')\r\n                this.setState({\r\n                    selectedRowKeys:[],\r\n                    selectedRows:null\r\n                })\r\n            }\r\n        })\r\n    }\r\n    render() {\r\n        const columns = [\r\n            {\r\n                title:\"id\",\r\n                dataIndex:\"id\"\r\n            },\r\n            {\r\n                title:\"用户名\",\r\n                dataIndex:\"userName\"\r\n            },\r\n            {\r\n                title:\"性别\",\r\n                dataIndex:\"sex\"\r\n            },\r\n            {\r\n                title:\"状态\",\r\n                dataIndex:'state'\r\n            },\r\n            {\r\n                title:'爱好',\r\n                dataIndex:'interest'\r\n            },\r\n            {\r\n                title:'生日',\r\n                dataIndex:'birthday'\r\n            },\r\n            {\r\n                title:'地址',\r\n                dataIndex:'address'\r\n            },\r\n            {\r\n                title:'早期时间',\r\n                dataIndex:\"time\"\r\n            }\r\n        ]\r\n        const rowSelection = {\r\n            type:\"radio\",\r\n            selectedRowKeys:this.state.selectedRowKeys\r\n        }\r\n        const rowCheckSelection = {\r\n            type:\"Checkbox\",\r\n            selectedRowKeys:this.state.selectedRowKeys,\r\n            onChange:(selectedRowKeys,selectedRows)=>{\r\n                this.setState({\r\n                    selectedRowKeys,\r\n                    selectedRows\r\n                })\r\n                console.log(this.state)\r\n            }\r\n        }\r\n        return (\r\n            <div>\r\n                <Card>\r\n                     <Table\r\n                      columns={columns}\r\n                      dataSource={this.state.dataSource}\r\n                      >\r\n\r\n                     </Table>\r\n                </Card>\r\n                <Card title=\"动态mock数据表格\">\r\n                     <Table\r\n                      columns={columns}\r\n                      dataSource={this.state.dataSource1}\r\n                      loading={!(this.state.dataSource1)}\r\n                      >\r\n                     </Table>\r\n                </Card>\r\n                <Card title=\"带了单选按钮的小玩意\">\r\n                     <Table\r\n                      bordered\r\n                      columns={columns}\r\n                      dataSource={this.state.dataSource}\r\n                      loading={!(this.state.dataSource)}\r\n                      rowSelection={rowSelection}\r\n                      onRow={(record,index)=>{\r\n                          return {\r\n                              onClick:()=>{\r\n                                  this.onRowClick(record,index)\r\n                              }\r\n                          }\r\n                      }}\r\n                      >\r\n                     </Table>\r\n                </Card>\r\n                <Card title=\"带了多选按钮的小玩意\">\r\n                    <div>\r\n                        <Button onClick={()=>{this.handleDelete()}}>\r\n                            删除\r\n                        </Button>\r\n                    </div>\r\n                     <Table\r\n                      bordered\r\n                      columns={columns}\r\n                      dataSource={this.state.dataSource}\r\n                      loading={!(this.state.dataSource)}\r\n                      rowSelection={rowCheckSelection}\r\n                      >\r\n                     </Table>\r\n                </Card>\r\n                <Card title=\"会分页的小玩意\">\r\n                     <Table\r\n                      bordered\r\n                      columns={columns}\r\n                      dataSource={this.state.dataSource}\r\n                      loading={!(this.state.dataSource)}\r\n                      rowSelection={rowCheckSelection}\r\n                      pagination={this.state.pagenation}\r\n                      >\r\n                     </Table>\r\n                </Card>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default BasicTable;","import Mock from 'mockjs';\r\n\r\nMock.mock('/wbbb',{\r\n    'data|20'\r\n    :[{\r\n        \"id|+1\":1,\r\n        \"userName\":\"@name\",\r\n        \"sex|1\":['male','female'],\r\n        \"state|1-5\":1,\r\n        'interest|1':['mage','warrior','rouge'],\r\n        'birthday|1':\"2020-12-2\",\r\n        'address|1':\"addd\"\r\n    }]\r\n});","import React, { Component } from 'react';\r\nimport {Card,Table,Modal,message,Button,Badge} from 'antd';\r\nimport axios from 'axios';\r\n// import Utils from '../../util/utils';\r\nimport '../../util/myMock'\r\n\r\nclass HighTable extends Component {\r\n    state={\r\n        dataSource:null\r\n    }\r\n    request(){\r\n        axios.get('/wbbb').then(res=>{\r\n            let dataSource = res.data.data;\r\n            dataSource.map((item,index)=>{\r\n                item.key=index;\r\n                return item;\r\n            })\r\n            this.setState({\r\n                dataSource\r\n            })\r\n        })\r\n    }\r\n    handleDelete = (item)=>{\r\n        let id = item.id;\r\n        Modal.confirm({\r\n            title:\"确认\",\r\n            content:\"确认删除\",\r\n            onOk:()=>{\r\n                message.success('删除成功',id);\r\n            }\r\n        })\r\n    }\r\n    componentDidMount(){\r\n        this.request();\r\n    }\r\n\r\n\r\n    \r\n    render() {\r\n        const columns = [\r\n            {\r\n                title:\"id\",\r\n                dataIndex:\"id\"\r\n            },\r\n            {\r\n                title:\"用户名\",\r\n                dataIndex:\"userName\"\r\n            },\r\n            {\r\n                title:\"性别\",\r\n                dataIndex:\"sex\"\r\n            },\r\n            {\r\n                title:\"状态\",\r\n                dataIndex:'state'\r\n            },\r\n            {\r\n                title:'爱好',\r\n                dataIndex:'interest'\r\n            },\r\n            {\r\n                title:'生日',\r\n                dataIndex:'birthday'\r\n            },\r\n            {\r\n                title:'地址',\r\n                dataIndex:'address'\r\n            }\r\n        ]\r\n        const columns2 = [\r\n            {\r\n                title:\"id\",\r\n                dataIndex:\"id\",\r\n                key:'id',\r\n                width:80\r\n            },\r\n            {\r\n                title:\"用户名\",\r\n                dataIndex:\"userName\",\r\n                width:80\r\n            },\r\n            {\r\n                title:\"性别\",\r\n                dataIndex:\"sex\",\r\n                width:80\r\n            },\r\n            {\r\n                title:\"状态\",\r\n                dataIndex:'state',\r\n                width:80\r\n            },\r\n            {\r\n                title:'爱好',\r\n                dataIndex:'interest',\r\n                width:80\r\n            },\r\n            {\r\n                title:'生日',\r\n                dataIndex:'birthday',\r\n                width:80\r\n            }\r\n        ]\r\n        const columns3 = [\r\n            {\r\n                title:\"id\",\r\n                dataIndex:\"id\"\r\n            },\r\n            {\r\n                title:\"用户名\",\r\n                dataIndex:\"userName\",\r\n                // key:'userName',\r\n                sorter:(a,b)=>{\r\n                    return a.userName.length - b.userName.length;\r\n                },\r\n                sortDirections: ['descend', 'ascend']\r\n            },\r\n            {\r\n                title:\"性别\",\r\n                dataIndex:\"sex\"\r\n            },\r\n            {\r\n                title:\"状态\",\r\n                key:'state',\r\n                dataIndex:'state',\r\n                sorter:(a,b)=>{\r\n                    return a.state - b.state\r\n                },\r\n                render:function(state){\r\n                    let config = {\r\n                        '1': <Badge status='success' text={'正常一个人'} />,\r\n                        '2':<Badge status='success' text={'风华才子'} />,\r\n                        '3':<Badge status='success' text={'北大才子'} />,\r\n                        \"4\":<Badge status='success' text={'百度fe'} />,\r\n                        '5':<Badge status='success' text={'创业者'} />\r\n                    }\r\n                    return config[state]\r\n                }\r\n            },\r\n            {\r\n                title:'爱好',\r\n                dataIndex:'interest'\r\n            },\r\n            {\r\n                title:'生日',\r\n                dataIndex:'birthday'\r\n            },\r\n            {\r\n                title:'操作',\r\n                render:(text,item)=>{\r\n                    return <Button onClick={()=>{this.handleDelete(item)}}>删除</Button>\r\n                }\r\n            }\r\n        ]\r\n        return (\r\n            <div>\r\n                <Card title=\"带筛选的小玩意\">\r\n                     <Table\r\n                      columns={columns3}\r\n                      dataSource={this.state.dataSource}\r\n                      scroll={{x:1600}}\r\n                      >\r\n\r\n                     </Table>\r\n                </Card>\r\n                <Card title=\"侧栏固定\">\r\n                     <Table\r\n                      columns={columns2}\r\n                      dataSource={this.state.dataSource}\r\n                      >\r\n\r\n                     </Table>\r\n                </Card>\r\n                \r\n                <Card title=\"表头固定\">\r\n                     <Table\r\n                      columns={columns}\r\n                      dataSource={this.state.dataSource}\r\n                      scroll={{y:300}}\r\n                      >\r\n\r\n                     </Table>\r\n                </Card>\r\n              \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default HighTable;","import React from 'react';\r\nimport FormItem from 'antd/lib/form/FormItem';\r\nimport {Card,Button,Table,Form, Select,Modal,message} from 'antd';\r\nimport axios from '../../axios/index';\r\nimport Utils from './../../util/utils';\r\nconst Option = Select.Option;\r\nexport default class City extends React.Component {\r\n    state={\r\n        list:[],\r\n        isShowOpenCity:false\r\n    }\r\n    params = {\r\n        page:1,\r\n      \r\n    }\r\n    handleOpenCity = ()=>{\r\n        this.setState({\r\n            isShowOpenCity:true\r\n        })\r\n    }\r\n    //城市开通\r\n    handleSubmit = ()=>{\r\n        let cityinfo = this.cityForm.props.form.getFieldsValue();\r\n        axios.ajax({\r\n            url:\"/open_city\",\r\n            data:{\r\n                params:cityinfo\r\n            }\r\n        }).then(res=>{\r\n            if(res.code === '0'){\r\n                message.success('开通成功');\r\n                this.requestList();   \r\n            }\r\n        })\r\n        this.setState({\r\n            isShowOpenCity:false\r\n        })\r\n    }\r\n    requestList(){\r\n        let _this = this;\r\n        axios.ajax({\r\n            url:\"/open_city\",\r\n            data:{\r\n                params:{\r\n                    page:this.params.page\r\n                }\r\n            }\r\n        }).then((res)=>{\r\n           this.setState({\r\n               list:res.result.item_list.map((item,index)=>{\r\n                   item.key = index;\r\n                   return item;\r\n               }),\r\n               pagination:Utils.pagenation(res,(current)=>{\r\n                   _this.params.page = current;\r\n                   _this.requestList();\r\n               })\r\n           })\r\n        })\r\n    }\r\n\r\n\r\n\r\n    componentDidMount(){\r\n        this.requestList();\r\n    }\r\n    render(){\r\n        const columns = [\r\n            {\r\n                title:\"城市ID\",\r\n                dataIndex:\"id\",\r\n            },{\r\n                title:\"城市名称\",\r\n                dataIndex:\"name\"\r\n            },{\r\n                title:\"用车模式\",\r\n                dataIndex:\"mode\",\r\n            },{\r\n                title:\"授权加盟商\",\r\n                dataIndex:\"franchisee_name\"\r\n            },{\r\n                title:\"城市管理员\",\r\n                dataIndex:\"city_admins\",\r\n                render(arr){\r\n                    return arr.map((item)=>{\r\n                        return item.user_name\r\n                    }).join(',');\r\n                }\r\n            },{\r\n                title:\"城市开通时间\",\r\n                dataIndex:\"open_time\"\r\n            },{\r\n                title:\"操作时间\",\r\n                dataIndex:\"update_time\"\r\n            },{\r\n                title:\"操作人\",\r\n                dataIndex:\"sys_user_name\"\r\n            }\r\n        ]\r\n        return (\r\n            <div>\r\n                <Card>\r\n                    <FilterForm/>    \r\n                </Card>\r\n                <Card style={{marginTop:10}}>\r\n                    <Button type=\"primary\" onClick={this.handleOpenCity}>开通城市</Button>\r\n                </Card>\r\n                <div className=\"content-warp\">\r\n                    <Table \r\n                    columns={columns}\r\n                    dataSource={this.state.list}\r\n                    />\r\n                </div>\r\n                <Modal\r\n                 title=\"开通城市\"\r\n                 visible={this.state.isShowOpenCity}\r\n                 onCancel={()=>{\r\n                     this.setState({\r\n                         isShowOpenCity:false\r\n                     })\r\n                 }}\r\n                 onOk={this.handleSubmit}\r\n                 >\r\n                <OpenCityForm wrappedComponentRef={(inst)=>{this.cityForm = inst }}/>\r\n                </Modal>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nclass FilterForm extends React.Component {\r\n    render(){\r\n       const {getFieldDecorator} = this.props.form;\r\n       return (\r\n        <Form layout=\"inline\">\r\n            <FormItem label=\"城市\">\r\n                {\r\n                    getFieldDecorator('city_id')(\r\n                        <Select placeholder=\"请选择城市\" style={{width:\"80px\"}}>\r\n                            <Option value=\"1\">背景</Option>\r\n                            <Option value=\"2\">石家庄</Option>\r\n                            <Option value=\"3\">河北</Option>\r\n                        </Select>\r\n                    )\r\n                }\r\n            </FormItem>\r\n            <FormItem label=\"用车模式\">\r\n                {\r\n                    getFieldDecorator('model')(\r\n                        <Select placeholder=\"全部\" style={{width:\"120px\"}}>\r\n                            <Option value=\"\">全部</Option>\r\n                            <Option value=\"1\">指定点停车模式</Option>\r\n                            <Option value=\"2\">禁停区模式</Option>\r\n                        </Select>\r\n                    )\r\n                }\r\n            </FormItem>\r\n            <FormItem label=\"营运模式\">\r\n                {\r\n                    getFieldDecorator('op_mode')(\r\n                        <Select placeholder=\"全部\" style={{width:\"80px\"}}>\r\n                            <Option value=\"\">全部</Option>\r\n                            <Option value=\"1\">自营</Option>\r\n                            <Option value=\"2\">加盟</Option>\r\n                        </Select>\r\n                    )\r\n                }\r\n            </FormItem>\r\n            <FormItem label=\"加盟商授权状态\">\r\n                {\r\n                    getFieldDecorator('op_mode')(\r\n                        <Select placeholder=\"全部\" style={{width:\"100px\"}}>\r\n                            <Option value=\"\">全部</Option>\r\n                            <Option value=\"1\">已授权</Option>\r\n                            <Option value=\"2\">未授权</Option>\r\n                        </Select>\r\n                    )\r\n                }\r\n            </FormItem>\r\n            <FormItem>\r\n                <Button type=\"primary\" style={{margin:\"0 20px\"}}>查询</Button>\r\n                <Button>重置</Button>\r\n            </FormItem>\r\n        </Form>\r\n       )\r\n    }\r\n}\r\nFilterForm = Form.create({})(FilterForm);\r\n\r\nclass OpenCityForm extends React.Component {\r\n    \r\n    render(){\r\n        const FormItemLayout  = {\r\n            labelCol:{\r\n                span:5\r\n            },\r\n            wrapperCol:{\r\n                span:10\r\n            }\r\n        }\r\n        const {getFieldDecorator} = this.props.form ;\r\n        return (\r\n            <Form layout=\"horizontal\">\r\n                <FormItem label=\"选择城市\" {...FormItemLayout}>\r\n                {\r\n                    getFieldDecorator('city_id',{\r\n                        initialValue:\"1\"\r\n                    })(\r\n                        <Select placeholder=\"请选择城市\" style={{width:\"100px\"}}>\r\n                            <Option value=\"0\">背景</Option>\r\n                            <Option value=\"1\">石家庄</Option>\r\n                            <Option value=\"2\">河北</Option>\r\n                        </Select>\r\n                    )\r\n                }\r\n                </FormItem>\r\n                <FormItem label=\"运营模式\" {...FormItemLayout}>\r\n                {\r\n                    getFieldDecorator('op_mode',{\r\n                        initialValue:\"1\"\r\n                    })(\r\n                        <Select  style={{width:\"100px\"}}>\r\n                            <Option value=\"1\">自营</Option>\r\n                            <Option value=\"2\">加盟</Option>\r\n                        </Select>\r\n                    )\r\n                }\r\n                   \r\n                </FormItem>\r\n                <FormItem label=\"用车模式\" {...FormItemLayout}>\r\n                {\r\n                    getFieldDecorator('use_mode',{\r\n                        initialValue:\"1\"\r\n                    })(\r\n                        <Select  style={{width:\"100px\"}}>\r\n                            <Option value=\"1\">指定停车地点</Option>\r\n                            <Option value=\"2\">禁停区</Option>\r\n                        </Select>\r\n                    )\r\n                }\r\n                </FormItem>\r\n            </Form>\r\n        )\r\n    }\r\n}\r\nOpenCityForm = Form.create({})(OpenCityForm);\r\n","import React from 'react'\r\nimport { Input,Select,Form,Button,Checkbox,DatePicker} from 'antd';\r\nimport  Utils  from '../../util/utils';\r\n\r\nconst FormItem = Form.Item\r\n// const Option = Select.Option\r\n\r\n \r\nclass BaseForm extends React.Component{\r\n    state = {\r\n        formList:\"\"\r\n    }\r\n    handleFilterSubmit = ()=>{\r\n        let fieldsValue = this.props.form.getFieldsValue();\r\n        this.props.filterSubmit(fieldsValue);\r\n    }\r\n    initFormList = ()=>{\r\n        \r\n        const { getFieldDecorator } = this.props.form;\r\n        const formList  = this.props.formList;\r\n        const formItemList = [];\r\n        \r\n        if( formList && formList.length>0 ){\r\n            formList.forEach((item,i)=>{\r\n                let label = item.label;\r\n                let field = item.field\r\n                let initialValue = item.initialValue || ''\r\n                let palceholder = item.placeholder\r\n                let width = item.width\r\n                if(item.type === '城市'){\r\n                    const CITY  =  <FormItem label=\"城市选择\" key={field}>\r\n                    {\r\n                        getFieldDecorator('city',{\r\n                            initialValue:'0'\r\n                        })(\r\n                            <Select\r\n                             placeholder={palceholder}\r\n                             style={{width:80}}\r\n                             >\r\n                                {Utils.getOptionList([\r\n                                    {id:'0',name:'全部'},\r\n                                    {id:'1',name:'北京'},\r\n                                    {id:'2',name:'上海'},\r\n                                    {id:'3',name:'天津'},\r\n                                    {id:'4',name:'杭州'},\r\n                                ])}\r\n                            </Select>\r\n                        )\r\n                    }\r\n                    </FormItem>\r\n                    formItemList.push(CITY);\r\n                }else if(item.type === '时间查询'){\r\n                    const begin_time  =  <FormItem label=\"订单时间\" key={field+'_begin'}>\r\n                        {\r\n                            getFieldDecorator('begin_time')(\r\n                                <DatePicker  showTime={true} placeholder={palceholder} format=\"YYYY-MM-DD HH:mm:ss\"/>\r\n                            )\r\n                        }\r\n                    </FormItem>\r\n                    formItemList.push(begin_time);\r\n                    const end_time  =  <FormItem label=\"~\" colon={false} key={field+'_end'}>\r\n                        {\r\n                            getFieldDecorator('end_time')(\r\n                                <DatePicker showTime={true} placeholder={palceholder} format=\"YYYY-MM-DD HH:mm:ss\"/>\r\n                            )\r\n                        }\r\n                    </FormItem>\r\n                    formItemList.push(end_time);\r\n                }else if(item.type === 'INPUT'){\r\n                    const INPUT =<FormItem label={label} key={field}>\r\n                        {\r\n                            getFieldDecorator(field,{\r\n                                initialValue:initialValue,\r\n                            })(\r\n                                <Input type=\"text\" placeholder={palceholder}/>\r\n                            )\r\n                        }\r\n                    </FormItem>\r\n                    formItemList.push(INPUT);\r\n                }else  if(item.type === 'SELECT' ){\r\n                    console.log([field])\r\n                    const SELECT =<FormItem label={label} key={field}>\r\n                        {\r\n                            getFieldDecorator(field,{\r\n                                initialValue:initialValue,\r\n                            })(\r\n                                <Select placeholder={palceholder} style={{width:width}}>\r\n                                    {Utils.getOptionList(item.list)}\r\n                                </Select>\r\n                            )\r\n                        }\r\n                    </FormItem>\r\n                    formItemList.push(SELECT);\r\n                } else if(item.type === 'CHECKBOX' ){\r\n                    const CHECKBOX =<FormItem label={label} key={field}>\r\n                        {\r\n                            getFieldDecorator([field],{\r\n                                valuePropName:'checked',\r\n                                initialValue:initialValue,\r\n                            })(\r\n                                <Checkbox>\r\n                                    {label}\r\n                                </Checkbox>\r\n                            )\r\n                        }\r\n                    </FormItem>\r\n                      formItemList.push(CHECKBOX);\r\n                } else if(item.type === 'DATEPICKER' ){\r\n                    const DATEPICKER =<FormItem label={label} key={field}>\r\n                        {\r\n                            getFieldDecorator([field])(\r\n                                <DatePicker showTime={true} placeholder={palceholder} format=\"YYYY-MM-DD HH:mm:ss\"/>\r\n                            )\r\n                        }\r\n                    </FormItem>\r\n                      formItemList.push(DATEPICKER);\r\n                }\r\n            })\r\n        }\r\n        return formItemList;\r\n    }\r\n    render(){\r\n        \r\n      return (\r\n          <Form layout=\"inline\">\r\n              {\r\n                this.initFormList()\r\n              }\r\n              <FormItem >\r\n                <Button type=\"primary\" style={{margin:\"0 20px\"}} onClick={this.handleFilterSubmit}>查询</Button>\r\n                <Button onClick={this.reset}>重置</Button>\r\n              </FormItem>\r\n          </Form>\r\n      )\r\n    }\r\n}\r\nexport default BaseForm = Form.create({})(BaseForm)","import React from 'react';\r\nimport {Table} from 'antd';\r\nexport default class ETable extends React.Component {\r\n\r\n    //标点单击的时候\r\n    onRowClick = (record,index)=>{\r\n        let rowSelection = this.props.rowSelection;\r\n        if(rowSelection === 'checkbox'){\r\n            let selectedRowKeys = this.props.selectedRowKeys;\r\n            let selectedItem = this.props.selectedItem;\r\n            let selectedIds = this.props.selectedIds;\r\n            if(selectedIds){\r\n                const i = selectedIds.indexOf(record.id);\r\n                if(i === -1){\r\n                    selectedIds.push(record.id);\r\n                    selectedRowKeys.push(index);\r\n                    selectedItem.push(record);\r\n                }else{\r\n                    selectedIds.splice(i,1);\r\n                    selectedRowKeys.splice(i,1);\r\n                    selectedItem.splice(i,1);\r\n                }\r\n            }else{\r\n                selectedIds = [record.id];\r\n                selectedRowKeys = [index];\r\n                selectedItem = [record];\r\n            }\r\n            this.props.updateSelectedItem(selectedRowKeys,selectedItem,selectedIds)\r\n        }else{\r\n            let selectedRowKeys = [index];\r\n            let selectedItem = [record];\r\n            this.props.updateSelectedItem(selectedRowKeys,selectedItem)\r\n        }\r\n    }\r\n    \r\n    //表单初始化\r\n    tableInit = () =>{ \r\n        let row_selection = this.props.rowSelection;\r\n        let selectedRowKeys = this.props.selectedRowKeys;\r\n        const rowSelection = {\r\n            type:'radio',\r\n            selectedRowKeys,\r\n            onChange:this.onSelectedChange\r\n        }\r\n        if(row_selection === false || row_selection === null){\r\n            row_selection = false\r\n        } else if (row_selection === 'checkbox'){\r\n            rowSelection.type = 'checkbox'\r\n        } else {\r\n            row_selection = 'radio'\r\n        }\r\n        return <Table\r\n            bordered\r\n            {...this.props}\r\n            rowSelection={row_selection?rowSelection:null}\r\n            onRow={(record, index) => {\r\n                return {\r\n                    onClick: () => {\r\n                        if(!row_selection){\r\n                            return\r\n                        }\r\n                        this.onRowClick(record, index);\r\n                    }\r\n                };\r\n            }}\r\n        />\r\n    }\r\n\r\n    //最后进行渲染\r\n    render(){\r\n        return (<div>\r\n            {\r\n                this.tableInit()    \r\n            }\r\n        </div>);\r\n    }\r\n}","import React from 'react';\r\nimport { Card, Button, Form, Modal, message} from 'antd'\r\nimport Utils from '../../util/utils';\r\nimport axios from '../../axios'\r\nimport BaseForm from '../../components/BaseForm'\r\nimport ETable from '../../components/ETable';\r\nconst FormItem = Form.Item;\r\nexport default class Order extends React.Component{\r\n    state  = {\r\n        orderInfo:{},\r\n        orderConfirmVisble:false\r\n    }\r\n    params = {\r\n        page: 1\r\n    }\r\n    formList = [\r\n        {\r\n            type:'SELECT',\r\n            label:'城市',\r\n            field:'city',\r\n            placeholder:'全部',\r\n            initialValue:'1',\r\n            width:80,\r\n            list: [{ id: '0', name: '全部' }, { id: '1', name: '北京' }, { id: '2', name: '天津' }, { id: '3', name: '上海' }]\r\n        },\r\n        {\r\n            type: '时间查询'\r\n        },\r\n        {\r\n            type: 'SELECT',\r\n            label: '订单状态',\r\n            field:'order_status',\r\n            placeholder: '全部',\r\n            initialValue: '1',\r\n            width: 80,\r\n            list: [{ id: '0', name: '全部' }, { id: '1', name: '进行中' }, { id: '2', name: '结束行程' }]\r\n        }\r\n    ]\r\n    componentDidMount(){\r\n        this.requestList()\r\n        console.log('order',this.state)\r\n    }\r\n\r\n    handleFilter = (params)=>{\r\n        this.params = params;\r\n        this.requestList();\r\n    }\r\n    requestList = ()=>{\r\n        // let _this = this;\r\n        axios.requestList(this,'/orderlist',this.params,true);\r\n        \r\n        // axios.ajax({\r\n        //     url:'/orderlist',\r\n        //     data:{\r\n        //         params: this.params\r\n        //     }\r\n        // }).then((res)=>{\r\n        //     let list = res.result.item_list.map((item, index) => {\r\n        //         item.key = index;\r\n        //         return item;\r\n        //     });\r\n        //     this.setState({\r\n        //         list\r\n        //     })\r\n        // })\r\n    }\r\n    // 订单结束确认\r\n    handleConfirm = ()=>{\r\n        let item = this.state.selectedItem;\r\n        if (!item) {\r\n            Modal.info({\r\n                title: '信息',\r\n                content: '请选择一条订单进行结束'\r\n            })\r\n            return;\r\n        }\r\n        axios.ajax({\r\n            url:'/order/ebike_info',\r\n            data:{\r\n                params:{\r\n                    orderId: item.id\r\n                }\r\n            }\r\n        }).then((res)=>{\r\n            if(res.code === 0 ){\r\n                this.setState({\r\n                    orderInfo:res.result,\r\n                    orderConfirmVisble: true\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    // 结束订单\r\n    handleFinishOrder = ()=>{\r\n        let item = this.state.selectedItem;\r\n        axios.ajax({\r\n            url: '/order/finish_order',\r\n            data: {\r\n                params: {\r\n                    orderId: item.id\r\n                }\r\n            }\r\n        }).then((res) => {\r\n            if (res.code === 0) {\r\n                message.success('订单结束成功')\r\n                this.setState({\r\n                    orderConfirmVisble: false\r\n                })\r\n                this.requestList();\r\n            }\r\n        })\r\n    }\r\n    onRowClick = (record, index) => {\r\n        let selectKey = [index];\r\n        this.setState({\r\n            selectedRowKeys: selectKey,\r\n            selectedItem: record\r\n        })\r\n    }\r\n\r\n    openOrderDetail = ()=>{\r\n        let item = this.state.selectedItem;\r\n        if (!item) {\r\n            Modal.info({\r\n                title: '信息',\r\n                content: '请先选择一条订单'\r\n            })\r\n            return;\r\n        }\r\n        window.open(`/#/common/order/detail/${item.id}`,'_blank')\r\n    }\r\n    render(){\r\n        const columns = [\r\n            {\r\n                title:'订单编号',\r\n                dataIndex:'order_sn'\r\n            },\r\n            {\r\n                title: '车辆编号',\r\n                dataIndex: 'bike_sn'\r\n            },\r\n            {\r\n                title: '用户名',\r\n                dataIndex: 'user_name'\r\n            },\r\n            {\r\n                title: '手机号',\r\n                dataIndex: 'mobile'\r\n            },\r\n            {\r\n                title: '里程',\r\n                dataIndex: 'distance',\r\n                render(distance){\r\n                    return distance/1000 + 'Km';\r\n                }\r\n            },\r\n            {\r\n                title: '行驶时长',\r\n                dataIndex: 'total_time'\r\n            },\r\n            {\r\n                title: '状态',\r\n                dataIndex: 'status'\r\n            },\r\n            {\r\n                title: '开始时间',\r\n                dataIndex: 'start_time'\r\n            },\r\n            {\r\n                title: '结束时间',\r\n                dataIndex: 'end_time'\r\n            },\r\n            {\r\n                title: '订单金额',\r\n                dataIndex: 'total_fee'\r\n            },\r\n            {\r\n                title: '实付金额',\r\n                dataIndex: 'user_pay'\r\n            }\r\n        ]\r\n        const formItemLayout = {\r\n            labelCol:{span:5},\r\n            wrapperCol:{span:19}\r\n        }\r\n        return (\r\n            <div>\r\n                <Card>\r\n                    <BaseForm formList={this.formList} filterSubmit={this.handleFilter}/>\r\n                </Card>\r\n                <Card style={{marginTop:10}}>\r\n                    <Button type=\"primary\" onClick={this.openOrderDetail}>订单详情</Button>\r\n                    <Button type=\"primary\" style={{marginLeft:10}} onClick={this.handleConfirm}>结束订单</Button>\r\n                </Card>\r\n                <div className=\"content-wrap\">\r\n                    <ETable\r\n                        updateSelectedItem={Utils.updateSelectedItem.bind(this)}\r\n                        columns={columns}\r\n                        dataSource={this.state.list}\r\n                        selectedRowKeys={this.state.selectedRowKeys}\r\n                        selectedIds = {this.state.selectedIds}\r\n                        selectedItem = {this.state.selectedItem}\r\n                        rowSelection='checkbox'\r\n                    />\r\n                </div>\r\n                <Modal\r\n                    title=\"结束订单\"\r\n                    visible={this.state.orderConfirmVisble}\r\n                    onCancel={()=>{\r\n                        this.setState({\r\n                            orderConfirmVisble:false\r\n                        })\r\n                    }}\r\n                    onOk={this.handleFinishOrder}\r\n                    width={600}\r\n                >\r\n                    <Form layout=\"horizontal\">\r\n                        <FormItem label=\"车辆编号\" {...formItemLayout}>\r\n                            {this.state.orderInfo.bike_sn}\r\n                        </FormItem>\r\n                        <FormItem label=\"剩余电量\" {...formItemLayout}>\r\n                            {this.state.orderInfo.battery + '%'}\r\n                        </FormItem>\r\n                        <FormItem label=\"行程开始时间\" {...formItemLayout}>\r\n                            {this.state.orderInfo.start_time}\r\n                        </FormItem>\r\n                        <FormItem label=\"当前位置\" {...formItemLayout}>\r\n                            {this.state.orderInfo.location}\r\n                        </FormItem>\r\n                    </Form>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport {Button,Card, Modal, Form, Input, Radio, Select, DatePicker} from 'antd';\r\nimport axios from './../../axios';\r\nimport Utils from '../../util/utils';\r\nimport BaseForm from '../../components/BaseForm';\r\nimport ETable from '../../components/ETable';\r\nimport moment from 'moment';\r\nconst RadioGroup = Radio.Group;\r\nconst FormItem = Form.Item;\r\nconst TextArea = Input.TextArea;\r\nconst Option = Select.Option;\r\n\r\nexport default class User extends React.Component {\r\n    params = {\r\n        page:1\r\n    }\r\n    state = {\r\n        isVisible:false\r\n    }\r\n    formList = [\r\n        {\r\n            type:'INPUT',\r\n            label:\"用户名\",\r\n            field:'user_name',\r\n            placeholder:'请输入用户名',\r\n            width:140\r\n        },{\r\n            type:'INPUT',\r\n            label:\"手机号\",\r\n            field:'user_mobile',\r\n            placeholder:'请输入手机号',\r\n            width:130\r\n        },{\r\n            type:'DATEPICKER',\r\n            label:'日期选择器',\r\n            field:'user_data',\r\n            placeholder:'请输入日期'\r\n        }\r\n    ]\r\n\r\n    componentDidMount(){\r\n        this.requestList();\r\n    }\r\n    handleFilter = (params)=>{\r\n        this.params = params\r\n        this.requestList();\r\n    }\r\n    hadleOperate = (type)=>{\r\n        console.log(type)\r\n        let item = this.state.selectedItem;\r\n        if(type === 'create'){\r\n            this.setState({\r\n                type,\r\n                isVisible:true,\r\n                title:'创建员工'\r\n            })\r\n        \r\n        }else if(type === 'edit'){\r\n            if(!item){\r\n                Modal.info({\r\n                    title:\"提示\",\r\n                    content:\"请选择一条数据\"\r\n                })\r\n                return ;\r\n            }\r\n            this.setState({\r\n                type,\r\n                isVisible:true,\r\n                title:'编辑员工',\r\n                userInfo:item\r\n            })\r\n        }else if(type === 'detail'){\r\n            if(!item){\r\n                Modal.info({\r\n                    title:\"提示\",\r\n                    content:\"请选择一条数据\"\r\n                })\r\n                return ;\r\n            }\r\n            this.setState({\r\n                type,\r\n                isVisible:true,\r\n                title:'员工',\r\n                userInfo:item\r\n            })\r\n        }else{\r\n            if(!item){\r\n                Modal.info({\r\n                    title:\"提示\",\r\n                    content:\"请选择一条数据\"\r\n                })\r\n                return ;\r\n            }\r\n            Modal.confirm({\r\n                title:'确认删除',\r\n                content:'是否删除当前用户',\r\n                onOk:()=>{\r\n                    axios.ajax({\r\n                        url:'/user/delete',\r\n                        data:{\r\n                            param:{\r\n                                id:item.id\r\n                            }\r\n                        }\r\n                    }).then(res=>{\r\n                        if(res.code === 0 ){\r\n                            this.setState({\r\n                                isVisible:false\r\n                            })\r\n                        }\r\n                        this.requestList();\r\n                    })\r\n                }\r\n            })\r\n        }\r\n       \r\n    }\r\n    // commit the created Form\r\n    handleSubmit = ()=>{\r\n        let type = this.state.type;\r\n        let data = this.UserForm.props.form.getFieldsValue();\r\n        axios.ajax({\r\n            url:type ==='create'?'/user/add':'/user/edit',\r\n            data:{\r\n                params:data\r\n            }\r\n        }).then(res=>{\r\n            if(res.code === '0'){\r\n                this.setState({\r\n                    isVisible:false\r\n                });\r\n                this.requestList();\r\n            }\r\n        })\r\n\r\n    }\r\n    requestList = ()=>{\r\n        axios.requestList(this,'/user/list',this.params,true);\r\n    }\r\n   \r\n\r\n    render(){\r\n        const columns = [\r\n            {\r\n                title:\"用户id\",\r\n                dataIndex:'id'\r\n            },{\r\n                title:\"用户名\",\r\n                dataIndex:'username'\r\n            },{\r\n                title:\"性别\",\r\n                dataIndex:'sex',\r\n                render(sex) {\r\n                    return sex === 1?'男':'女'\r\n                }\r\n            },{\r\n                title:\"状态\",\r\n                dataIndex:'state',\r\n                //this is a very lit way,boss\r\n                render(state){\r\n                    return {\r\n                        '1':'咸鱼一条',\r\n                        '2':'风华才子',\r\n                        '3':'北大才子',\r\n                        '4':'百度FE',\r\n                        '5':'创业者'\r\n                    }[state]\r\n                }\r\n            },{\r\n                title:\"爱好\",\r\n                dataIndex:'interest',\r\n                render(state){\r\n                    return {\r\n                        '1':'跑步',\r\n                        '2':'打篮球',\r\n                        '3':'糕点烘培',\r\n                        '4':'吃水果',\r\n                        '5':'园艺',\r\n                        '6':'陶艺',\r\n                        '7':'搞黄色',\r\n                        '8':'搞红色'\r\n                    }[state]\r\n                }\r\n            },{\r\n                title:\"生日\",\r\n                dataIndex:'birthday'\r\n            },{\r\n                title:\"联系地址\",\r\n                dataIndex:'address'\r\n            },{\r\n                title:\"早起时间\",\r\n                dataIndex:'time'\r\n            }\r\n        ]\r\n        let footer = {};\r\n        if(this.state.type === 'detail'){\r\n            footer = {\r\n                footer:null\r\n            }\r\n        }\r\n        return (\r\n            <div>\r\n                <Card>\r\n                    <BaseForm formList={this.formList} filterSubmit={this.handleFilter}/>\r\n                </Card>\r\n                <Card style={{marginTop:10}} className=\"operate-wrap\">\r\n                    <Button type=\"primary\" icon='plus' onClick={()=>{this.hadleOperate('create')}}>创建员工</Button>\r\n                    <Button type=\"primary\" icon='edit' onClick={()=>this.hadleOperate('edit')}>编辑员工</Button>\r\n                    <Button type=\"primary\" icon='plus' onClick={()=>this.hadleOperate('detail')}>员工详情</Button>\r\n                    <Button type='danger' icon='delete' onClick={()=>this.hadleOperate('delete')}>删除员工</Button>\r\n                    \r\n                </Card>\r\n                <div className=\"content-wrap\">\r\n                    <ETable\r\n                        updateSelectedItem={Utils.updateSelectedItem.bind(this)}\r\n                        columns={columns}\r\n                        dataSource={this.state.list}\r\n                        selectedRowKeys={this.state.selectedRowKeys}\r\n                        rowSelection='radio'\r\n                    />\r\n                </div>\r\n                <Modal\r\n                    title={this.state.title}\r\n                    visible={this.state.isVisible}\r\n                    onOk={this.handleSubmit}\r\n                    onCancel={()=>{\r\n                        this.UserForm.props.form.resetFields();\r\n                        this.setState({\r\n                            isVisible:false\r\n                        })\r\n                      \r\n                    }}\r\n                    width={600}\r\n                    {...footer}\r\n                >\r\n                    <UserForm type={this.state.type} userInfo={this.state.userInfo} wrappedComponentRef={(inst)=>{this.UserForm = inst}}/>\r\n                </Modal>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nclass UserForm extends React.Component {\r\n    getState = (state)=>{\r\n        return {\r\n            '1':'咸鱼一条',\r\n            '2':'风华才子',\r\n            '3':'北大才子',\r\n            '4':'百度FE',\r\n            '5':'创业者'\r\n        }[state]\r\n    }\r\n    render(){\r\n        let {type,userInfo}  = this.props;\r\n        if(userInfo || !(type ==='create')){\r\n            userInfo = userInfo[0];\r\n        }else{\r\n            userInfo = {}\r\n        }\r\n   \r\n        // let userInfo = this.props.userInfo;\r\n        \r\n        // let type = this.props.type;\r\n        const { getFieldDecorator } =  this.props.form || {};\r\n        const formlayout = {\r\n            labelCol:{span:5},\r\n            wrapperCol:{span:19}\r\n        }\r\n        return (\r\n            <Form layout='horizontal'>\r\n                <FormItem label=\"用户名\" {...formlayout}>\r\n                    {\r\n                        type === 'detail'?userInfo.username:\r\n                        getFieldDecorator('user_name',{\r\n                            initialValue:userInfo.username||''\r\n                        })(\r\n                            <Input type='text' placeholder='请输入用户名' />\r\n                        )\r\n                    }\r\n                </FormItem>\r\n                <FormItem label=\"性别\" {...formlayout}>\r\n                    {\r\n                         type === 'detail'?(userInfo.sex === 1 ?'男':'女'):\r\n                        getFieldDecorator('sex',{\r\n                            initialValue:userInfo.sex||''\r\n                        })(\r\n                            <RadioGroup>\r\n                                <Radio value={1}>男</Radio>\r\n                                <Radio value={2}>女</Radio>\r\n                            </RadioGroup>\r\n                        )\r\n                    }\r\n                </FormItem>\r\n                <FormItem label=\"状态\" {...formlayout}>\r\n                    {\r\n                        type === 'detail'?this.getState(userInfo.state):\r\n                        getFieldDecorator('state',{\r\n                            initialValue:userInfo.state||''\r\n                        })(\r\n                            <Select>\r\n                                <Option value={1}>咸鱼一条</Option>\r\n                                <Option value={2}>风华浪子</Option>\r\n                                <Option value={3}>北大才子</Option>\r\n                                <Option value={4}>百度FE</Option>\r\n                                <Option value={5}>创业者</Option>\r\n                            </Select>\r\n                        )\r\n                    }\r\n                </FormItem>\r\n                <FormItem label=\"生日\" {...formlayout}>\r\n                    {\r\n                         type === 'detail'?userInfo.birthday:\r\n                        getFieldDecorator('birthday',{\r\n                            initialValue:moment(userInfo.birthday)||''\r\n                        })(\r\n                            <DatePicker/>\r\n                        )\r\n                    }\r\n                </FormItem>\r\n                <FormItem label=\"联系地址\" {...formlayout}>\r\n                    {\r\n                         type === 'detail'?userInfo.address:\r\n                        getFieldDecorator('address',{\r\n                            initialValue:userInfo.address||''\r\n                        })(\r\n                            <TextArea rows={3} placeholder='请输入联系地址'/>\r\n                        )\r\n                    }\r\n                </FormItem>\r\n            </Form>\r\n        )\r\n    }\r\n}\r\n\r\nUserForm = Form.create({})(UserForm)","import React, { Component } from 'react';\r\nimport {Card} from 'antd';\r\nimport axios from './../../axios';\r\nimport BaseForm from '../../components/BaseForm';\r\n\r\nclass Map extends Component {\r\n    \r\n    formList = [\r\n        {\r\n            type:'城市',\r\n            field:'city'\r\n        },{\r\n            type:'时间查询',\r\n            field:'time'\r\n        },{\r\n            type:'SELECT',\r\n            label:'订单状态',\r\n            field:'order_status',\r\n            palceholder:'全部',\r\n            initialValue:'0',\r\n            list:[{id:'0',name:'全部'},{id:'1',name:'进行中'},{id:'2',name:'行程结束'}]\r\n        }\r\n    ]\r\n\r\n    requestList = ()=>{\r\n        axios.ajax({\r\n            url:'/map/bike_list',\r\n            data:{\r\n                param:this.param\r\n            }\r\n        }).then(res=>{\r\n            if(res.code === '0'){\r\n                this.setState({\r\n                    totalCount:res.result.total_count\r\n                })\r\n                this.renderMap(res);\r\n            }\r\n        })\r\n    }\r\n\r\n    renderMap = (res)=>{\r\n        let list = res.result.route_list;\r\n        this.map = new window.BMap.Map('container');\r\n        let gps1 = list[0].split(',');\r\n        let startPoint = new window.BMap.Point(gps1[0], gps1[1]);\r\n        let gps2 = list[list.length - 1].split(',');\r\n        let endPoint = new window.BMap.Point(gps2[0], gps2[1]);\r\n        this.map.centerAndZoom(endPoint,11)\r\n\r\n        //增加初始地点图表\r\n        let startPointIcon = new window.BMap.Icon('/asset/start_point.png',new window.BMap.Size(36,42),{\r\n            imageSize:new window.BMap.Size(36,42),\r\n            anchor:new window.BMap.Size(18,42)\r\n        });\r\n        let bikeMarketStart = new window.BMap.Marker(startPoint,{icon:startPointIcon});\r\n        this.map.addOverlay(bikeMarketStart)\r\n        //增加结束地点图表\r\n        let endPointIcon = new window.BMap.Icon('/asset/end_point.png',new window.BMap.Size(36,42),{\r\n            imageSize:new window.BMap.Size(36,42),\r\n            anchor:new window.BMap.Size(18,42)\r\n        });\r\n        let bikeMarketEnd = new window.BMap.Marker(endPoint,{icon:endPointIcon});\r\n        this.map.addOverlay(bikeMarketEnd);\r\n\r\n        //绘制车辆行驶路线\r\n        let routeList = [];\r\n        list.forEach(item=>{\r\n            let p = item.split(',');\r\n            routeList.push(new window.BMap.Point(p[0],p[1]))\r\n        })\r\n        let polyLine = new window.BMap.Polyline(routeList,{\r\n            strokeColor:'#ef4136',\r\n            strokeWeight:3,\r\n            strokeOpacity:1\r\n        })\r\n        this.map.addOverlay(polyLine);\r\n        \r\n        //绘制服务区\r\n        let servicePointList = [];\r\n        let serviceList = res.result.service_list;\r\n        serviceList.forEach((item)=>{\r\n            servicePointList.push(new window.BMap.Point(item.lon,item.lat));\r\n        })\r\n        let polyServiceLine = new window.BMap.Polygon(servicePointList,{\r\n            strokeColor:'#ef4136',\r\n            strokeWeight:3,\r\n            strokeOpacity:1,\r\n            fillColor:'#ff8605'\r\n        })\r\n        this.map.addOverlay(polyServiceLine);\r\n\r\n        //添加地图中的自行车图表\r\n        let bikeList = res.result.bike_list;\r\n        let bikeIcon = new window.BMap.Icon('/asset/bike.jpg',new window.BMap.Size(36,42),{\r\n            imageSize:new window.BMap.Size(36,42),\r\n            anchor:new window.BMap.Size(18,42)\r\n        });\r\n        bikeList.forEach(item=>{\r\n            let p = item.split(',');\r\n            let point = new window.BMap.Point(p[0],p[1]);\r\n            let bikeMarker = new window.BMap.Marker(point,{\r\n                icon:bikeIcon\r\n            });\r\n            this.map.addOverlay(bikeMarker);\r\n        })  \r\n    }\r\n\r\n    handelFilterSubmit = (filterParam)=>{\r\n        this.params = filterParam\r\n        this.requestList('container');\r\n    }\r\n    componentDidMount(){\r\n        this.requestList();\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Card>\r\n                    <BaseForm formList={this.formList} filterSubmit={this.handelFilterSubmit}/>\r\n                </Card>\r\n                <Card style={{marginTop:10}}>\r\n                    <div>共100辆车</div>\r\n                    <div id='container' style={{height:500}}></div>\r\n                </Card>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default Map;","import React, { Component } from 'react';\r\n\r\nimport { Row } from 'antd';\r\n\r\nimport Footer from './components/Footer';\r\nimport Header from './components/Header';\r\n\r\nimport './style/common.less'\r\nclass Common extends Component {\r\n    \r\n    render() {\r\n        return (\r\n            <div>\r\n                <Row className='simple-page'>\r\n                    <Header menuType=\"second\"/>\r\n                </Row>\r\n                <Row>\r\n                    {this.props.children}\r\n                    <Footer/>\r\n                </Row>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Common ;","import React, { Component } from 'react';\r\nimport { Card } from 'antd';  \r\nimport axios from '../../axios/index';\r\n// import Utils from '../../util/utils';\r\nimport './detail.less'\r\n\r\n\r\nexport default class Order extends Component {\r\n    state = {\r\n        orderInfo:null\r\n    }\r\n    componentDidMount(){\r\n        let orderId  = this.props.match.params.orderId;\r\n        if(orderId){\r\n            this.getDetailInfo();\r\n        }\r\n      \r\n    }\r\n    getDetailInfo(orderId){\r\n        axios.ajax({\r\n            url:\"/order/detail\",\r\n            data:{\r\n                params:{\r\n                    orderId:orderId  \r\n                }\r\n            }\r\n        }).then((res)=>{\r\n            console.log(res)\r\n            if(res.code === \"0\"){\r\n                this.setState({\r\n                    orderInfo:res.result \r\n                })\r\n                this.renderMap(res.result);\r\n            }\r\n        })\r\n    }\r\n\r\n    renderMap = (result)=>{\r\n        this.map = new window.BMap.Map('orderDetailMap');\r\n\r\n        this.addMapControl()//add the control pannel of the map\r\n\r\n        this.drawBikearea(result.area);\r\n        this.drawBikeRoute(result.position_list)//draw user route\r\n\r\n      \r\n    }\r\n    addMapControl = ()=>{\r\n        let map = this.map;\r\n        map.addControl(new window.BMap.ScaleControl({anchor:window.BMAP_ANCHOR_TOP_LEFT}));\r\n        map.addControl(new window.BMap.NavigationControl({anchor:window.BMAP_ANCHOR_TOP_LEFT}));\r\n    }\r\n    drawBikeRoute = (positionList)=>{\r\n        // let map = this.map;\r\n        let startPoint = '';\r\n        let endPoint = '';\r\n        if(positionList.length>0){\r\n            let first = positionList[0];\r\n     \r\n            startPoint = new window.BMap.Point(first.lon,first.lat);\r\n            let startIcon = new window.BMap.Icon('/asset/start_point.png',new window.BMap.Size(36,42),{\r\n                imageSize:new window.BMap.Size(36,42),\r\n                anchor:new window.BMap.Size(36,42) \r\n            });\r\n\r\n            let startMarker = new window.BMap.Marker(startPoint,{icon:startIcon});\r\n            this.map.addOverlay(startMarker);\r\n\r\n            let last = positionList[positionList.length-1];\r\n            endPoint = new window.BMap.Point(last.lon,last.lat);\r\n            let endIcon = new window.BMap.Icon('/asset/end_point.png',new window.BMap.Size(36,42),{\r\n                imageSize:new window.BMap.Size(36,42),\r\n                anchor:new window.BMap.Size(36,42) \r\n            });\r\n\r\n            let endMarker = new window.BMap.Marker(endPoint,{icon:endIcon});\r\n            this.map.addOverlay(endMarker);\r\n\r\n\r\n\r\n            let trackPoint = [];\r\n            positionList.forEach((item)=>{\r\n                trackPoint.push(new window.BMap.Point(item.lon,item.lat))\r\n            })\r\n            let polyline = new window.BMap.Polyline(trackPoint,{\r\n                strokeColor:\"#1869A0\",\r\n                strokeWeight:3,\r\n                strokeOpacity:1\r\n            })\r\n            this.map.addOverlay(polyline);\r\n            this.map.centerAndZoom(endPoint,11);\r\n        }\r\n    }\r\n    drawBikearea = (positionList)=>{\r\n        let trackPoint = [];\r\n        positionList.forEach((item)=>{\r\n            trackPoint.push(new window.BMap.Point(item.lon,item.lat))\r\n        })\r\n        let polygon = new window.BMap.Polygon(trackPoint,{\r\n            strokeColor:\"#ce0000\",\r\n            strokeWeight:4,\r\n            strokeOpacity:1,\r\n            fillColor:'#ff8605'\r\n        })\r\n        this.map.addOverlay(polygon);\r\n    }\r\n    render(){\r\n        const info= this.state.orderInfo || {}\r\n        return (\r\n            <div>\r\n                <Card>\r\n                    <div id=\"orderDetailMap\" className=\"order-map\"></div>\r\n                    <div className=\"detail-items\">\r\n                        <div className=\"item-title\">基础信息</div>\r\n                        <ul className=\"detail-form\">\r\n                            {/* <li>\r\n                                 <div className=\"detail-form-left\">用车模式</div>.\r\n                                 <div className=\"detail-form-content\">{orderInfo.mode === 1? '服务区' : '停车点' }</div>\r\n                            </li> */}\r\n                            <li>\r\n                                 <div className=\"detail-form-left\">订单编号</div>\r\n                                 <div className=\"detail-form-content\">{info.bike_sn}</div>\r\n                            </li>\r\n                            <li>\r\n                                 <div className=\"detail-form-left\">车辆编号</div>\r\n                                 <div className=\"detail-form-content\">{info.user_name}</div>\r\n                            </li>\r\n                            <li>\r\n                                 <div className=\"detail-form-left\">手机号</div>\r\n                                 <div className=\"detail-form-content\">{info.mobile}</div>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                    <div className=\"detail-items\">\r\n                        <div className=\"item-title\">行驶轨迹</div>\r\n                        <ul className=\"detail-form\">\r\n                            <li>\r\n                                 <div className=\"detail-form-left\">行程起点</div>\r\n                                 <div className=\"detail-form-content\">{info.start_location }</div>\r\n                            </li>\r\n                            <li>\r\n                                 <div className=\"detail-form-left\">行程终点</div>\r\n                                 <div className=\"detail-form-content\">{info.end_location}</div>\r\n                            </li>\r\n                            <li>\r\n                                 <div className=\"detail-form-left\">行驶里程</div>\r\n                                 <div className=\"detail-form-content\">{info.distance/1000}公里</div>\r\n                            </li>\r\n\r\n                        </ul>\r\n                    </div>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport {Card} from 'antd';\r\n\r\n//新版本的好像不用引入呢\r\n// import echarts from  'echarts/lib/echarts'\r\n\r\n// import 'echarts/lib/chart/bar';\r\n// import 'echarts/lib/component/tooltip'\r\n// import 'echarts/lib/component/title';\r\n// import 'echarts/lib/component/legend';\r\n// import 'echarts/lib/component/markPoint';\r\n\r\n\r\nimport ReactEcharts from 'echarts-for-react';\r\n\r\nexport default class Bar extends React.Component {\r\n    getOption = ()=>{\r\n        let option = {\r\n            title:{\r\n                text:'用户骑行订单'\r\n            },\r\n            tooltip:{\r\n                trigger:'axis'\r\n            },\r\n            xAxis:{\r\n                data:['周一','周二','周三','周四','周五','周六','周日']\r\n            },\r\n            yAxis:{\r\n                type:'value'\r\n            },\r\n            series:[\r\n                {\r\n                    name:'订单量',\r\n                    type:'bar',\r\n                    data:[100,200,100,500,300,400,700]\r\n                }\r\n            ]\r\n        }\r\n        return option;\r\n    }\r\n    getOption2 = ()=>{\r\n        let option = {\r\n            title:{\r\n                text:'用户骑行订单'\r\n            },\r\n            legend:{\r\n                data:['ofe','陌拜','小绿车']\r\n            },\r\n            tooltip:{\r\n                trigger:'axis'\r\n            },\r\n            xAxis:{\r\n                data:['周一','周二','周三','周四','周五','周六','周日']\r\n            },\r\n            yAxis:{\r\n                type:'value'\r\n            },\r\n            series:[\r\n                {\r\n                    name:'ofe',\r\n                    type:'bar',\r\n                    data:[100,200,100,500,300,400,700]\r\n                },\r\n                {\r\n                    name:'陌拜',\r\n                    type:'bar',\r\n                    data:[100,200,100,500,300,400,700]\r\n                },\r\n                {\r\n                    name:'小绿车',\r\n                    type:'bar',\r\n                    data:[100,200,100,500,300,400,700]\r\n                }\r\n            ]\r\n        }\r\n        return option;\r\n    }\r\n    render(){\r\n        return (\r\n            <div>\r\n                <Card title=\"柱状图表之一\">\r\n                    <ReactEcharts\r\n                        option = {this.getOption()}\r\n                        style={{height:600}}\r\n                    />\r\n                </Card>\r\n                <Card title=\"柱状图表之二\" style={{marginTop:10}}>\r\n                    <ReactEcharts\r\n                        option = {this.getOption2()}\r\n                        style={{height:600}}\r\n                    />\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\nimport {Card} from 'antd';\r\n\r\n//新版本的好像不用引入呢\r\n// import echarts from  'echarts/lib/echarts'\r\n\r\n// import 'echarts/lib/chart/bar';\r\n// import 'echarts/lib/component/tooltip'\r\n// import 'echarts/lib/component/title';\r\n// import 'echarts/lib/component/legend';\r\n// import 'echarts/lib/component/markPoint';\r\n\r\n\r\nimport ReactEcharts from 'echarts-for-react';\r\n\r\nexport default class Bar extends React.Component {\r\n    getOption = ()=>{\r\n        let option = {\r\n            title:{\r\n                text:'用户骑行订单',\r\n                x:'center'\r\n            },\r\n            tooltip:{\r\n                trigger:'item',\r\n                formatter:'{a}<br/>{b}:{c}({d}%)'\r\n            },  \r\n            legend:{\r\n                top:10,\r\n                right:20,\r\n                orient:'vertical',\r\n                data:['周一','周二','周三','周四','周五','周六','周日']\r\n            },\r\n            series:[\r\n                {\r\n                    name:'订单量',\r\n                    type:'pie',\r\n                    data:[\r\n                        {\r\n                            value:2100,\r\n                            name:'周一'\r\n                        },{\r\n                            value:1700,\r\n                            name:'周二'\r\n                        },{\r\n                            value:1100,\r\n                            name:'周三'\r\n                        },{\r\n                            value:2000,\r\n                            name:'周四'\r\n                        },{\r\n                            value:4500,\r\n                            name:'周五'\r\n                        },{\r\n                            value:3000,\r\n                            name:'周六'\r\n                        },{\r\n                            value:2000,\r\n                            name:'周日'\r\n                        }\r\n                    ]\r\n                }\r\n            ]\r\n        }\r\n        return option;\r\n    }\r\n    getOption2 = ()=>{\r\n        let option = {\r\n            title:{\r\n                text:'用户骑行订单',\r\n                x:'center'\r\n            },\r\n            tooltip:{\r\n                trigger:'item',\r\n                formatter:'{a}<br/>{b}:{c}({d}%)'\r\n            },  \r\n            legend:{\r\n                top:10,\r\n                right:20,\r\n                orient:'vertical',\r\n                data:['周一','周二','周三','周四','周五','周六','周日']\r\n            },\r\n            series:[\r\n                {\r\n                    name:'订单量',\r\n                    type:'pie',\r\n                    roseType: 'radius',\r\n                    data:[\r\n                        {\r\n                            value:2100,\r\n                            name:'周一'\r\n                        },{\r\n                            value:1700,\r\n                            name:'周二'\r\n                        },{\r\n                            value:1100,\r\n                            name:'周三'\r\n                        },{\r\n                            value:2000,\r\n                            name:'周四'\r\n                        },{\r\n                            value:4500,\r\n                            name:'周五'\r\n                        },{\r\n                            value:3000,\r\n                            name:'周六'\r\n                        },{\r\n                            value:2000,\r\n                            name:'周日'\r\n                        }\r\n                    ].sort((a,b)=>{return a.value - b.value}),\r\n                    animationType: 'scale',\r\n                    animationEasing: 'elasticOut',\r\n                    animationDelay: function (idx) {\r\n                        return Math.random() * 200;\r\n                    }\r\n                }\r\n            ]\r\n        }\r\n        return option;\r\n    }\r\n    render(){\r\n        return (\r\n            <div>\r\n                <Card title=\"饼图之二\" style={{marginTop:10}}>\r\n                    <ReactEcharts\r\n                        option = {this.getOption2()}\r\n                        style={{height:600}}\r\n                    />\r\n                </Card>\r\n                <Card title=\"饼图之一\">\r\n                    <ReactEcharts\r\n                        option = {this.getOption()}\r\n                        style={{height:600}}\r\n                    />\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\nimport {Card} from 'antd';\r\n\r\n//新版本的好像不用引入呢\r\n// import echarts from  'echarts/lib/echarts'\r\n\r\n// import 'echarts/lib/chart/bar';\r\n// import 'echarts/lib/component/tooltip'\r\n// import 'echarts/lib/component/title';\r\n// import 'echarts/lib/component/legend';\r\n// import 'echarts/lib/component/markPoint';\r\n\r\n\r\nimport ReactEcharts from 'echarts-for-react';\r\n\r\nexport default class Bar extends React.Component {\r\n    getOption = ()=>{\r\n        let option = {\r\n            title:{\r\n                text:'用户骑行订单'\r\n            },\r\n            legend:{\r\n                top:10,\r\n                right:20,\r\n                data:['ofo','摩拜']\r\n            },\r\n            xAxis:{\r\n                data:['周一','周二','周三','周四','周五','周六','周日']\r\n            },\r\n            yAxis:{\r\n                type:'value'\r\n            },\r\n            tooltip:{\r\n                trigger:'item',\r\n                formatter:'{a}<br/>{b}:{c}({d}%)'\r\n            },  \r\n            series:[\r\n                {\r\n                    name:'ofo',\r\n                    type:'line',\r\n                    data:[100,200,100,500,300,400,700]\r\n                }\r\n            ]\r\n        }\r\n        return option;\r\n    }\r\n    getOption2 = ()=>{\r\n        let option = {\r\n            title:{\r\n                text:'用户骑行订单'\r\n            },\r\n            legend:{\r\n                top:10,\r\n                right:20,\r\n                data:['ofo','摩拜']\r\n            },\r\n            xAxis:{\r\n                data:['周一','周二','周三','周四','周五','周六','周日']\r\n            },\r\n            yAxis:{\r\n                type:'value'\r\n            },\r\n            tooltip:{\r\n                trigger:'item',\r\n                formatter:'{a}<br/>{b}:{c}({d}%)'\r\n            },  \r\n            series:[\r\n                {\r\n                    name:'ofo',\r\n                    type:'line',\r\n                    data:[100,200,100,500,300,400,700]\r\n                },{\r\n                    name:'摩拜',\r\n                    type:'line',\r\n                    data:[200,300,200,300,400,100,600]\r\n                }\r\n            ]\r\n        }\r\n        return option;\r\n    }\r\n    getOption3 = ()=>{\r\n        let option = {\r\n            xAxis: {\r\n                type: 'category',\r\n                boundaryGap: true,\r\n                data: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun']\r\n            },\r\n            yAxis: {\r\n                type: 'value'\r\n            },\r\n            series: [{\r\n                data: [820, 932, 901, 934, 1290, 1330, 1320],\r\n                type: 'line',\r\n                areaStyle: {}\r\n            }]\r\n        }\r\n        return option;\r\n    }\r\n    render(){\r\n        return (\r\n            <div>\r\n                <Card title=\"折线图之一\">\r\n                    <ReactEcharts\r\n                        option = {this.getOption()}\r\n                        style={{height:600}}\r\n                    />\r\n                </Card>\r\n                <Card title=\"折线图之二\">\r\n                    <ReactEcharts\r\n                        option = {this.getOption2()}\r\n                        style={{height:600}}\r\n                    />\r\n                </Card><Card title=\"折线图之三\">\r\n                    <ReactEcharts\r\n                        option = {this.getOption3()}\r\n                        style={{height:600}}\r\n                    />\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\nimport {Card,Button,Modal} from 'antd';\r\n\r\nimport { Editor } from 'react-draft-wysiwyg';\r\nimport { EditorState } from 'draft-js';\r\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\r\n\r\nimport draftjs from 'draftjs-to-html';\r\nexport default class Rich extends React.Component {\r\n    state = {\r\n        editState:EditorState.createEmpty()\r\n    }\r\n    state = {\r\n        showRichText:false,\r\n        editorContent: '',\r\n        editorState: '',\r\n    };\r\n    handleClearContent = ()=>{\r\n        this.setState({\r\n            editorState:''\r\n        })\r\n    }\r\n    handleGetText = ()=>{\r\n        this.setState({\r\n            showRichText:true\r\n        })\r\n        console.log(this.state.cotentState)\r\n    }\r\n    onEditorStateChange = (editorState) => {\r\n        this.setState({\r\n            editorState\r\n        });\r\n    };\r\n    onEditorChange = (cotentState)=>{\r\n        this.setState({\r\n            cotentState\r\n        })\r\n    }\r\n    render(){\r\n        const {editorState} = this.state;\r\n        return (\r\n            <div>\r\n                <Card>\r\n                    <Button onClick={this.handleClearContent} style={{marginRight:10}} >清空内容</Button>\r\n                    <Button onClick={this.handleGetText}>查看内容</Button>\r\n                </Card>\r\n                <Card title=\"富文本编辑框\" style={{height:500}}>\r\n                <Editor\r\n                        editorState={editorState}\r\n                        onContentStateChange={this.onEditorChange}\r\n                        onEditorStateChange={this.onEditorStateChange}\r\n                    />\r\n                </Card>\r\n                <Modal\r\n                    title=\"富文本\"\r\n                    visible={this.state.showRichText}\r\n                    onCancel={()=>{\r\n                        this.setState({\r\n                            showRichText:false\r\n                        })\r\n                    }}\r\n                >\r\n                    {\r\n                        \r\n                    draftjs(this.state.cotentState)\r\n                    }\r\n                </Modal>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","const menuList = [\r\n    {\r\n        title: '首页',\r\n        key: '/home'\r\n    },\r\n    {\r\n        title: 'UI',\r\n        key: '/ui',\r\n        children: [\r\n            {\r\n                title: '按钮',\r\n                key: '/ui/buttons',\r\n            },\r\n            {\r\n                title: '弹框',\r\n                key: '/ui/modals',\r\n            },\r\n            {\r\n                title: 'Loading',\r\n                key: '/ui/loadings',\r\n            },\r\n            {\r\n                title: '通知提醒',\r\n                key: '/ui/notification',\r\n            },\r\n            {\r\n                title: '全局Message',\r\n                key: '/ui/messages',\r\n            },\r\n            {\r\n                title: 'Tab页签',\r\n                key: '/ui/tabs',\r\n            },\r\n            {\r\n                title: '图片画廊',\r\n                key: '/ui/gallery',\r\n            },\r\n            {\r\n                title: '轮播图',\r\n                key: '/ui/carousel',\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        title: '表单',\r\n        key: '/form',\r\n        children: [\r\n            {\r\n                title: '登录',\r\n                key: '/form/login',\r\n            },\r\n            {\r\n                title: '注册',\r\n                key: '/form/reg',\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        title: '表格',\r\n        key: '/table',\r\n        children: [\r\n            {\r\n                title: '基础表格',\r\n                key: '/table/basic',\r\n            },\r\n            {\r\n                title: '高级表格',\r\n                key: '/table/high',\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        title: '富文本',\r\n        key: '/rich'\r\n    },\r\n    {\r\n        title: '城市管理',\r\n        key: '/city'\r\n    },\r\n    {\r\n        title: '订单管理',\r\n        key: '/order',\r\n        btnList: [\r\n            {\r\n                title: '订单详情',\r\n                key: 'detail'\r\n            },\r\n            {\r\n                title: '结束订单',\r\n                key: 'finish'\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        title: '员工管理',\r\n        key: '/user'\r\n    },\r\n    {\r\n        title: '车辆地图',\r\n        key: '/bikeMap'\r\n    },\r\n    {\r\n        title: '图标',\r\n        key: '/charts',\r\n        children: [\r\n            {\r\n                title: '柱形图',\r\n                key: '/charts/bar'\r\n            },\r\n            {\r\n                title: '饼图',\r\n                key: '/charts/pie'\r\n            },\r\n            {\r\n                title: '折线图',\r\n                key: '/charts/line'\r\n            },\r\n        ]\r\n    },\r\n    {\r\n        title: '权限设置',\r\n        key: '/permission'\r\n    },\r\n];\r\nexport default menuList;","import React, { Component } from 'react';\r\nimport {Card,Button,Badge,Input,Select,Form,Modal,message,Tree,Transfer} from 'antd';\r\nimport ETable from './../../components/ETable';\r\nimport Utils from './../../util/utils';\r\nimport axios from '../../axios';\r\nimport menuConfig from './menuConfig';\r\nimport './style.less'\r\nconst FormItem = Form.Item;\r\nconst Option = Select.Option;\r\nconst TreeNode = Tree.TreeNode;\r\n\r\nclass Permison extends Component {\r\n    state = {\r\n        list:[],\r\n        isRoleVisible:false,\r\n        isPermVisible:false\r\n    }\r\n    //请求方法\r\n    requestList = ()=>{\r\n        axios.requestList(this,'/role/list',{});\r\n    }\r\n    //角色创建按钮\r\n    handleRole = ()=>{\r\n        this.setState({\r\n            isRoleVisible:true\r\n        })\r\n    }\r\n    //创建按钮请求提交\r\n    handleRoleSubmit = ()=>{\r\n        let data = this.roleForm.props.form.getFieldsValue();\r\n        axios.ajax({\r\n            url:'/role/create',\r\n            data:{\r\n                param:data\r\n            }\r\n        }).then(res=>{\r\n            if(['0',0].includes(res.code)){\r\n                message.success('创建成功')\r\n                this.setState({\r\n                    isRoleVisible:false\r\n                })\r\n                this.requestList();\r\n            }\r\n        })\r\n    }\r\n    \r\n    //设置权限按钮\r\n    handleRolePermission = ()=>{\r\n        let item = this.state.selectedItem;\r\n        if(!item){\r\n            Modal.info({\r\n                title:'请选择一个角色'\r\n            });\r\n            return;\r\n        }\r\n        item = this.state.selectedItem[0] || {};\r\n        this.setState({\r\n            isPermVisible:true,\r\n            detailInfo:item,\r\n            menuInfo:item.menus\r\n        })\r\n    }\r\n    //设置权限提交\r\n    handlePermEditSubmit = ()=>{\r\n        let data = this.permForm.props.form.getFieldsValue();\r\n        data.role_id = this.state.selectedItem.id;\r\n        data.menus = this.state.menuInfo;\r\n        axios.ajax({\r\n            url:'/permision/edit',\r\n            data:{\r\n                params:{\r\n                    ...data\r\n                }\r\n            }\r\n        }).then(res=>{\r\n            if(res){\r\n                this.setState({\r\n                    isPermVisible:false\r\n                }) \r\n                this.requestList();\r\n            }\r\n        })\r\n    }\r\n\r\n    \r\n    //用户授权\r\n    handleUserAuth = ()=>{\r\n        let item = this.state.selectedItem;\r\n        if(!item){\r\n            Modal.info({\r\n                title:'请选择一个角色'\r\n            });\r\n            return;\r\n        }\r\n        item = this.state.selectedItem[0] || {};\r\n        this.setState({\r\n            isUserVisible:true,\r\n            detailInfo:item\r\n        })\r\n        this.getRoleUserList(item.id);\r\n\r\n    }\r\n    //获得用户列表\r\n    getRoleUserList = (id)=>{\r\n        axios.ajax({\r\n            url:'/role/user_list',\r\n            data:{\r\n                param:{\r\n                    id\r\n                }\r\n            }\r\n        }).then((res)=>{\r\n            if(res){\r\n                this.setState({\r\n                    isUserVisible:true\r\n                })\r\n                this.getAuthUserList(res.result)\r\n                \r\n            }    \r\n        })\r\n    }\r\n    //筛选用户\r\n    getAuthUserList = (dataSource)=>{\r\n        const mockData = [];\r\n        const targetKeys = [];\r\n        if(dataSource && dataSource.length > 0){\r\n            for(let i=0;i<dataSource.length;i++){\r\n                const data = {\r\n                    key:dataSource[i].user_id,\r\n                    title:dataSource[i].user_name,\r\n                    status:dataSource[i].status\r\n                }\r\n                if(data.status === 1){\r\n                    targetKeys.push(data.key);\r\n                }\r\n                mockData.push(data);\r\n            }\r\n            this.setState({\r\n                mockData,\r\n                targetKeys\r\n            })\r\n        }\r\n    }\r\n    handleUserSubmit = ()=>{\r\n        let  data = {};\r\n        data.user_ids = this.state.targetKeys\r\n        data.role_id = this.state.selectedItem[0].id;\r\n        axios.ajax({\r\n            url:'/role/user_role_edit',\r\n            data:{\r\n                params:{\r\n                   ...data\r\n                }\r\n            }\r\n        }).then(res=>{\r\n            if(res){\r\n                message.success('状态已更新')\r\n                this.setState({\r\n                    isUserVisible:false\r\n                })\r\n                this.requestList();\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n    componentDidMount(){\r\n        this.requestList()\r\n    }\r\n    render() {\r\n        const columns = [\r\n            {\r\n                title:\"角色Id\",\r\n                dataIndex:'id'\r\n            },{\r\n                title:\"角色名称\",\r\n                dataIndex:'role_name'\r\n            },{\r\n                title:'创建时间',\r\n                dataIndex:'create_time',\r\n                render(time){\r\n                    return Utils.formDate(time);\r\n                }\r\n            },{\r\n                title:'使用状态',\r\n                dataIndex:'status',\r\n                render:(value)=>{\r\n                    if(value === 1){\r\n                        return  <Badge status=\"success\" text=\"已启用\"/>\r\n                    }else{\r\n                        return  <Badge status=\"warning\" text=\"未启用\" />\r\n                    }\r\n                }\r\n            },{\r\n                title:'创建时间',\r\n                dataIndex:'authorize_time',\r\n                render(time){\r\n                    return Utils.formDate(time);\r\n                }\r\n            },{\r\n                title:'授权人',\r\n                dataIndex:'authorize_user_name'\r\n            }\r\n        ]\r\n        return (\r\n            <div>\r\n                <Card>\r\n                    <Button type=\"primary\"  onClick={this.handleRole} style={{marginRight:10}}>创建角色</Button>\r\n                    <Button type=\"primary\"  onClick={this.handleRolePermission} style={{marginRight:10}}>设置权限</Button>\r\n                    <Button type=\"primary\"  onClick={this.handleUserAuth} >用户授权</Button>\r\n                </Card>\r\n                <div className=\"content-wrap\">\r\n                    <ETable\r\n                        dataSource={this.state.list}\r\n                        columns={columns}\r\n                        updateSelectedItem={Utils.updateSelectedItem.bind(this)}\r\n                        selectedRowKeys={this.state.selectedRowKeys}\r\n                    />\r\n                </div>\r\n                <Modal\r\n                    title='创建角色'\r\n                    visible={this.state.isRoleVisible}\r\n                    onOk={this.handleRoleSubmit}\r\n                    onCancel={()=>{\r\n                        this.roleForm.props.form.resetFields();\r\n                        this.setState({\r\n                            isRoleVisible:false\r\n                        })\r\n                    }}\r\n                >\r\n                    <RoleForm wrappedComponentRef={(inst)=>this.roleForm = inst}/>\r\n                </Modal>\r\n                <Modal\r\n                    title='设置权限'\r\n                    visible={this.state.isPermVisible}\r\n                    onOk={this.handlePermEditSubmit}\r\n                    onCancel={()=>{\r\n                        this.setState({\r\n                            isPermVisible:false\r\n                        })\r\n                    }}\r\n                >\r\n                    <PerEditForm \r\n                    wrappedComponentRef={(inst)=>this.permForm = inst}\r\n                    detailInfo={this.state.detailInfo}\r\n                    menuInfo={this.state.menuInfo}\r\n                    patchMenuInfo={(checkedKeys)=>{\r\n                        this.setState({\r\n                            menuInfo:checkedKeys\r\n                        })\r\n                    }}\r\n                    />\r\n                </Modal>\r\n                <Modal\r\n                    title='用户授权'\r\n                    visible={this.state.isUserVisible}\r\n                    width={800}\r\n                    onOk={this.handleUserSubmit}\r\n                    onCancel={()=>{\r\n                        this.setState({\r\n                            isUserVisible:false\r\n                        })\r\n                    }}\r\n                >\r\n                    <RoleAuthForm \r\n                        wrappedComponentRef={(inst)=>this.userAuthForm = inst}\r\n                        detailInfo={this.state.detailInfo}\r\n                        targetKeys={this.state.targetKeys}\r\n                        mockData={this.state.mockData}\r\n                        patchUserInfo={(targetKeys)=>{\r\n                            this.setState({\r\n                                targetKeys\r\n                            })\r\n                        }}\r\n                    />  \r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Permison;\r\n\r\nclass RoleForm extends React.Component {\r\n    render(){\r\n        const { getFieldDecorator } =  this.props.form || {};\r\n        const formlayout = {\r\n            labelCol:{span:5},\r\n            wrapperCol:{span:19}\r\n        }\r\n        return (\r\n            <Form layout='horizontal'>\r\n                <FormItem label=\"用户名\" {...formlayout}>\r\n                    {\r\n                        getFieldDecorator('user_name',{\r\n                            initialValue:''\r\n                        })(\r\n                            <Input type='text' placeholder='请输入用户名' />\r\n                        )\r\n                    }\r\n                </FormItem>\r\n                <FormItem label=\"状态\" {...formlayout}>\r\n                    {\r\n                        getFieldDecorator('state',{\r\n                            initialValue:1\r\n                        })(\r\n                            <Select>\r\n                                <Option value={1}>启用</Option>\r\n                                <Option value={0}>未启用</Option>\r\n                            </Select>\r\n                        )\r\n                    }\r\n                </FormItem>\r\n            </Form>\r\n        )\r\n    }\r\n}\r\n\r\nRoleForm = Form.create({})(RoleForm)\r\n\r\nclass PerEditForm extends React.Component {\r\n    onCheck = (checkedKeys)=>{\r\n        this.props.patchMenuInfo(checkedKeys)\r\n    }\r\n    renderTreeNodes = (data)=>{\r\n        return  data.map(item=>{\r\n            if(item.children){\r\n                return <TreeNode title={item.title} key={item.key}>\r\n                    {\r\n                        this.renderTreeNodes(item.children)\r\n                    }\r\n                </TreeNode>\r\n            }else{\r\n                return <TreeNode title={item.title} key={item.key}/>\r\n            }\r\n        })\r\n    }\r\n    render(){\r\n        const { getFieldDecorator } =  this.props.form || {};\r\n\r\n        const formItemlayout = {\r\n            labelCol:{span:5},\r\n            wrapperCol:{span:19}\r\n        }\r\n        const detail_info = this.props.detailInfo;\r\n        const menuInfo = this.props.menuInfo;\r\n        return (\r\n            <Form layout=\"horizontal\">\r\n                <FormItem label='角色名称' {...formItemlayout}>\r\n                    <Input disabled placeholder={detail_info.role_name} />\r\n                </FormItem>\r\n                <FormItem label='状态' {...formItemlayout}>\r\n                   {\r\n                       getFieldDecorator('status',{\r\n                         initialValue:detail_info.status===1?'1':'0'\r\n                       })(\r\n                           <Select>\r\n                               <Option value='1'>启用</Option>\r\n                               <Option value='0'>未启用</Option>\r\n                           </Select>\r\n                       )\r\n                   }\r\n                </FormItem>\r\n                <Tree\r\n                    checkable\r\n                    defaultExpandAll\r\n                    onCheck={(checkedKeys)=>{\r\n                        this.onCheck(checkedKeys)\r\n                    }}\r\n                    checkedKeys={menuInfo}\r\n                >\r\n                   <TreeNode title=\"平台权限\" key='platform_all'>\r\n                        {\r\n                            this.renderTreeNodes(menuConfig)\r\n                        }\r\n                   </TreeNode>\r\n                </Tree>\r\n            </Form>\r\n        )\r\n    }\r\n}\r\nPerEditForm = Form.create({})(PerEditForm)\r\n\r\nclass RoleAuthForm extends React.Component {\r\n\r\n    filterOption = (inputValue, option) => {\r\n        return option.title.indexOf(inputValue) > -1;\r\n    };\r\n    handleChange = (targetKeys)=>{\r\n        this.props.patchUserInfo(targetKeys)\r\n    }\r\n    render(){\r\n        // const { getFieldDecorator } =  this.props.form || {};\r\n        \r\n        \r\n        const formItemlayout = {\r\n            labelCol:{span:5},\r\n            wrapperCol:{span:19}\r\n        }\r\n       \r\n        const detail_info = this.props.detailInfo;\r\n        const targetKeys = this.props.targetKeys;\r\n        const mockData = this.props.mockData;\r\n  \r\n        return (\r\n            <Form layout=\"horizontal\">\r\n                <FormItem label='角色状态' {...formItemlayout}>\r\n                    <Input disabled placeholder={detail_info.role_name} />\r\n                </FormItem>\r\n                <FormItem label='角色判断' {...formItemlayout}>\r\n                   <Transfer\r\n                        listStyle={{width:210,height:400}}\r\n                        dataSource={mockData}\r\n                        titles={['待选用户','已选用户']}\r\n                        showSearch\r\n                        filterOption={this.filterOption}\r\n                        targetKeys={targetKeys}\r\n                        render={item=>item.title}\r\n                        onChange={this.handleChange}\r\n                   />\r\n                </FormItem>\r\n            </Form>\r\n        )\r\n    }\r\n}\r\nRoleAuthForm = Form.create({})(RoleAuthForm)","import React,{ Component } from 'react';\r\nimport { HashRouter,Route,Switch} from 'react-router-dom';\r\n\r\nimport App from './App';\r\nimport Login from './page/login';\r\nimport Admin from './admin';\r\n\r\nimport Buttons from './page/ui/button';\r\nimport Model from './page/ui/model';\r\nimport Home from './page/home';\r\nimport Nomatch from './page/nomatch';\r\nimport Loading from './page/ui/loading';\r\nimport Notice from './page/ui/notic';\r\nimport Message from './page/ui/message';\r\nimport Tags from './page/ui/tags';\r\nimport Gallery from './page/ui/gallery';\r\nimport Carousels from './page/ui/carousel';\r\nimport FormLogin from './page/form/login';\r\nimport FormRegister from './page/form/register';\r\nimport BasicTable from './page/table/basictable';\r\nimport HighTable from './page/table/higertable';\r\nimport City from './page/city';\r\nimport Order from './page/order';\r\nimport User from './page/user';\r\nimport BikeMap from './page/map/bikemap';\r\n\r\nimport Common from './common';\r\nimport OrderDetail from './page/order/detail';\r\nimport EBar from './page/echarts/bar';\r\nimport EPie from './page/echarts/pie';\r\nimport ELine from './page/echarts/line';\r\nimport Rich from './page/rich';\r\nimport Permision from './page/permision';\r\nexport default class IRouter  extends Component {\r\n    render(){\r\n        return (\r\n            <HashRouter>\r\n                <App>\r\n                    <Switch>\r\n                    <Route path='/login' component={Login} />\r\n                    <Route path=\"/common\" render={()=>\r\n                        <Common>\r\n                            <Route path=\"/common/order/detail/:orderId\" component={OrderDetail}></Route>\r\n                        </Common>\r\n                    }/>\r\n                    <Route path='/' render={()=>(\r\n                        <Admin>\r\n                            <Switch>\r\n                                <Route path='/home' component={Home}/> \r\n                                <Route path='/ui/buttons' component={Buttons}/>\r\n                                <Route path='/ui/modals' component={Model}/>\r\n                                <Route path='/ui/Loadings' component={Loading}/>\r\n                                <Route path='/ui/notification' component={Notice}/>\r\n                                <Route path='/ui/messages' component={Message}/>\r\n                                <Route path='/ui/tabs' component={Tags}/>\r\n                                <Route path='/ui/gallery' component={Gallery}/>\r\n                                <Route path='/ui/carousel' component={Carousels}/>\r\n                                <Route path='/form/login' component={FormLogin}/>\r\n                                <Route path='/form/reg' component={FormRegister}/>\r\n                                <Route path='/table/basic' component={BasicTable}/>\r\n                                <Route path='/table/high' component={HighTable}/>\r\n                                <Route path='/city' component={City}/>\r\n                                <Route path='/order' component={Order}/>\r\n                                <Route path='/user' component={User}/>\r\n                                <Route path='/bikeMap' component={BikeMap}/>\r\n                                <Route path='/charts/bar' component={EBar}/>\r\n                                <Route path='/charts/pie' component={EPie}/>\r\n                                <Route path='/charts/line' component={ELine}/>\r\n                                <Route path='/rich' component={Rich}/>\r\n                                <Route path='/permission' component={Permision}/>\r\n                                <Route path='/' component={Permision}/>\r\n                                <Route component={Nomatch}></Route>\r\n                            </Switch>\r\n                        </Admin>\r\n                    )} />\r\n                    </Switch>\r\n                </App>\r\n            </HashRouter>\r\n        )\r\n    }\r\n}","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport IRouter from './router';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n    <IRouter/>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}